ALTER TABLE B_ANSIBLE_IF_INFO ADD COLUMN ACCESS_AUTH TEXT AFTER DISP_SEQ;

ALTER TABLE B_ANSIBLE_IF_INFO_JNL ADD COLUMN ACCESS_AUTH TEXT AFTER DISP_SEQ;

ALTER TABLE B_ANS_TWR_HOST ADD COLUMN ACCESS_AUTH TEXT AFTER DISP_SEQ;

ALTER TABLE B_ANS_TWR_HOST_JNL ADD COLUMN ACCESS_AUTH TEXT AFTER DISP_SEQ;

ALTER TABLE B_ANS_TWR_CREDENTIAL_TYPE ADD COLUMN ACCESS_AUTH TEXT AFTER DISP_SEQ;

ALTER TABLE B_ANS_TWR_CREDENTIAL_TYPE_JNL ADD COLUMN ACCESS_AUTH TEXT AFTER DISP_SEQ;

ALTER TABLE B_ANS_VARS_TYPE ADD COLUMN ACCESS_AUTH TEXT AFTER DISP_SEQ;

ALTER TABLE B_ANS_VARS_TYPE_JNL ADD COLUMN ACCESS_AUTH TEXT AFTER DISP_SEQ;

ALTER TABLE B_ANS_CONTENTS_FILE ADD COLUMN ACCESS_AUTH TEXT AFTER DISP_SEQ;

ALTER TABLE B_ANS_CONTENTS_FILE_JNL ADD COLUMN ACCESS_AUTH TEXT AFTER DISP_SEQ;

ALTER TABLE B_ANS_TEMPLATE_FILE ADD COLUMN ACCESS_AUTH TEXT AFTER DISP_SEQ;

ALTER TABLE B_ANS_TEMPLATE_FILE_JNL ADD COLUMN ACCESS_AUTH TEXT AFTER DISP_SEQ;

ALTER TABLE B_ANSIBLE_EXEC_MODE ADD COLUMN ACCESS_AUTH TEXT AFTER DISP_SEQ;

ALTER TABLE B_ANSIBLE_EXEC_MODE_JNL ADD COLUMN ACCESS_AUTH TEXT AFTER DISP_SEQ;

ALTER TABLE B_ANS_TWER_RUNDATA_DEL_FLAG ADD COLUMN ACCESS_AUTH TEXT AFTER DISP_SEQ;

ALTER TABLE B_ANS_TWER_RUNDATA_DEL_FLAG_JNL ADD COLUMN ACCESS_AUTH TEXT AFTER DISP_SEQ;

ALTER TABLE B_ANS_TWR_INSTANCE_GROUP ADD COLUMN ACCESS_AUTH TEXT AFTER DISP_SEQ;

ALTER TABLE B_ANS_TWR_INSTANCE_GROUP_JNL ADD COLUMN ACCESS_AUTH TEXT AFTER DISP_SEQ;

ALTER TABLE B_ANS_TWR_VIRTUALENV ADD COLUMN ACCESS_AUTH TEXT AFTER DISP_SEQ;

ALTER TABLE B_ANS_TWR_VIRTUALENV_JNL ADD COLUMN ACCESS_AUTH TEXT AFTER DISP_SEQ;

ALTER TABLE B_ANS_TWR_ORGANIZATION ADD COLUMN ACCESS_AUTH TEXT AFTER DISP_SEQ;

ALTER TABLE B_ANS_TWR_ORGANIZATION_JNL ADD COLUMN ACCESS_AUTH TEXT AFTER DISP_SEQ;

ALTER TABLE B_ANS_COMVRAS_USLIST ADD COLUMN ACCESS_AUTH TEXT AFTER DISP_SEQ;

ALTER TABLE B_ANS_COMVRAS_USLIST_JNL ADD COLUMN ACCESS_AUTH TEXT AFTER DISP_SEQ;

ALTER TABLE B_ANS_COMVRAS_USLIST_V_ID ADD COLUMN ACCESS_AUTH TEXT AFTER DISP_SEQ;

ALTER TABLE B_ANS_COMVRAS_USLIST_V_ID_JNL ADD COLUMN ACCESS_AUTH TEXT AFTER DISP_SEQ;

ALTER TABLE B_ANS_COMVRAS_USLIST_F_ID ADD COLUMN ACCESS_AUTH TEXT AFTER DISP_SEQ;

ALTER TABLE B_ANS_COMVRAS_USLIST_F_ID_JNL ADD COLUMN ACCESS_AUTH TEXT AFTER DISP_SEQ;

CREATE OR REPLACE VIEW D_ANS_TWR_HOST     AS 
SELECT
  * 
FROM 
  B_ANS_TWR_HOST
WHERE
  ANSTWR_ISOLATED_TYPE is NULL;
  
CREATE OR REPLACE VIEW D_ANS_TWR_HOST_JNL AS 
SELECT
  * 
FROM 
  B_ANS_TWR_HOST_JNL
WHERE
  ANSTWR_ISOLATED_TYPE is NULL;

CREATE OR REPLACE VIEW D_ANSIBLE_TOWER_IF_INFO AS 
SELECT 
  TAB_A.*,
  TAB_B.ANSTWR_HOSTNAME,
  TAB_B.ANSTWR_LOGIN_AUTH_TYPE,
  TAB_B.ANSTWR_LOGIN_USER,
  TAB_B.ANSTWR_LOGIN_PASSWORD,
  TAB_B.ANSTWR_LOGIN_SSH_KEY_FILE,
  TAB_B.ANSTWR_ISOLATED_TYPE
FROM
  B_ANSIBLE_IF_INFO           TAB_A
  LEFT JOIN (
             SELECT * 
             FROM B_ANS_TWR_HOST 
             WHERE DISUSE_FLAG = '0'
            ) TAB_B ON ( TAB_A.ANSTWR_HOST_ID = TAB_B.ANSTWR_HOST_ID );
  
CREATE OR REPLACE VIEW D_ANSIBLE_TOWER_IF_INFO_JNL AS 
SELECT 
  TAB_A.*,
  TAB_B.ANSTWR_HOSTNAME,
  TAB_B.ANSTWR_LOGIN_AUTH_TYPE,
  TAB_B.ANSTWR_LOGIN_USER,
  TAB_B.ANSTWR_LOGIN_PASSWORD,
  TAB_B.ANSTWR_LOGIN_SSH_KEY_FILE,
  TAB_B.ANSTWR_ISOLATED_TYPE
FROM
  B_ANSIBLE_IF_INFO_JNL         TAB_A
  LEFT JOIN (
             SELECT * 
             FROM B_ANS_TWR_HOST_JNL
             WHERE DISUSE_FLAG = '0'
            ) TAB_B ON ( TAB_A.ANSTWR_HOST_ID = TAB_B.ANSTWR_HOST_ID );

ALTER TABLE B_ANSIBLE_LNS_PLAYBOOK ADD COLUMN ACCESS_AUTH TEXT AFTER DISP_SEQ;

ALTER TABLE B_ANSIBLE_LNS_PLAYBOOK_JNL ADD COLUMN ACCESS_AUTH TEXT AFTER DISP_SEQ;

ALTER TABLE B_ANSIBLE_LNS_PATTERN_LINK ADD COLUMN ACCESS_AUTH TEXT AFTER DISP_SEQ;

ALTER TABLE B_ANSIBLE_LNS_PATTERN_LINK_JNL ADD COLUMN ACCESS_AUTH TEXT AFTER DISP_SEQ;

ALTER TABLE B_ANSIBLE_LNS_PHO_LINK ADD COLUMN ACCESS_AUTH TEXT AFTER DISP_SEQ;

ALTER TABLE B_ANSIBLE_LNS_PHO_LINK_JNL ADD COLUMN ACCESS_AUTH TEXT AFTER DISP_SEQ;

ALTER TABLE B_ANSIBLE_LNS_VARS_MASTER ADD COLUMN ACCESS_AUTH TEXT AFTER DISP_SEQ;

ALTER TABLE B_ANSIBLE_LNS_VARS_MASTER_JNL ADD COLUMN ACCESS_AUTH TEXT AFTER DISP_SEQ;

ALTER TABLE B_ANS_LNS_PTN_VARS_LINK ADD COLUMN ACCESS_AUTH TEXT AFTER DISP_SEQ;

ALTER TABLE B_ANS_LNS_PTN_VARS_LINK_JNL ADD COLUMN ACCESS_AUTH TEXT AFTER DISP_SEQ;

ALTER TABLE B_ANSIBLE_LNS_VARS_ASSIGN MODIFY COLUMN VARS_ENTRY TEXT;
ALTER TABLE B_ANSIBLE_LNS_VARS_ASSIGN ADD COLUMN SENSITIVE_FLAG VARCHAR(1) AFTER VARS_ENTRY;
ALTER TABLE B_ANSIBLE_LNS_VARS_ASSIGN ADD COLUMN ACCESS_AUTH TEXT AFTER DISP_SEQ;

ALTER TABLE B_ANSIBLE_LNS_VARS_ASSIGN_JNL MODIFY COLUMN VARS_ENTRY TEXT;
ALTER TABLE B_ANSIBLE_LNS_VARS_ASSIGN_JNL ADD COLUMN SENSITIVE_FLAG VARCHAR(1) AFTER VARS_ENTRY;
ALTER TABLE B_ANSIBLE_LNS_VARS_ASSIGN_JNL ADD COLUMN ACCESS_AUTH TEXT AFTER DISP_SEQ;

ALTER TABLE C_ANSIBLE_LNS_EXE_INS_MNG ADD COLUMN COLLECT_STATUS INT AFTER CONDUCTOR_INSTANCE_NO;
ALTER TABLE C_ANSIBLE_LNS_EXE_INS_MNG ADD COLUMN COLLECT_LOG VARCHAR(1024) AFTER COLLECT_STATUS;
ALTER TABLE C_ANSIBLE_LNS_EXE_INS_MNG ADD COLUMN ACCESS_AUTH TEXT AFTER DISP_SEQ;

ALTER TABLE C_ANSIBLE_LNS_EXE_INS_MNG_JNL ADD COLUMN COLLECT_STATUS INT AFTER CONDUCTOR_INSTANCE_NO;
ALTER TABLE C_ANSIBLE_LNS_EXE_INS_MNG_JNL ADD COLUMN COLLECT_LOG VARCHAR(1024) AFTER COLLECT_STATUS;
ALTER TABLE C_ANSIBLE_LNS_EXE_INS_MNG_JNL ADD COLUMN ACCESS_AUTH TEXT AFTER DISP_SEQ;

CREATE OR REPLACE VIEW D_ANSIBLE_LNS_INS_STATUS     AS 
SELECT * 
FROM B_ANSIBLE_STATUS;

CREATE OR REPLACE VIEW D_ANSIBLE_LNS_INS_STATUS_JNL AS 
SELECT * 
FROM B_ANSIBLE_STATUS_JNL;

CREATE OR REPLACE VIEW D_ANSIBLE_LNS_IF_INFO     AS 
SELECT * 
FROM B_ANSIBLE_IF_INFO;

CREATE OR REPLACE VIEW D_ANSIBLE_LNS_IF_INFO_JNL AS 
SELECT * 
FROM B_ANSIBLE_IF_INFO_JNL;

CREATE OR REPLACE VIEW D_ANSIBLE_LNS_INS_RUN_MODE     AS 
SELECT * 
FROM B_ANSIBLE_RUN_MODE;

CREATE OR REPLACE VIEW D_ANSIBLE_LNS_INS_RUN_MODE_JNL AS 
SELECT * 
FROM B_ANSIBLE_RUN_MODE_JNL;

CREATE OR REPLACE VIEW D_ANSIBLE_LNS_PLAYBOOK AS 
SELECT  PLAYBOOK_MATTER_ID      ,
        PLAYBOOK_MATTER_NAME    ,
        CONCAT(PLAYBOOK_MATTER_ID,':',PLAYBOOK_MATTER_NAME) PLAYBOOK,
        PLAYBOOK_MATTER_FILE    ,
        DISP_SEQ                ,
        ACCESS_AUTH             ,
        NOTE                    ,
        DISUSE_FLAG             ,
        LAST_UPDATE_TIMESTAMP   ,
        LAST_UPDATE_USER
FROM    B_ANSIBLE_LNS_PLAYBOOK;

CREATE OR REPLACE VIEW D_ANSIBLE_LNS_PLAYBOOK_JNL AS 
SELECT  JOURNAL_SEQ_NO          ,
        JOURNAL_REG_DATETIME    ,
        JOURNAL_ACTION_CLASS    ,
        PLAYBOOK_MATTER_ID      ,
        PLAYBOOK_MATTER_NAME    ,
        CONCAT(PLAYBOOK_MATTER_ID,':',PLAYBOOK_MATTER_NAME) PLAYBOOK,
        PLAYBOOK_MATTER_FILE    ,
        DISP_SEQ                ,
        ACCESS_AUTH             ,
        NOTE                    ,
        DISUSE_FLAG             ,
        LAST_UPDATE_TIMESTAMP   ,
        LAST_UPDATE_USER
FROM B_ANSIBLE_LNS_PLAYBOOK_JNL;

CREATE OR REPLACE VIEW E_ANSIBLE_LNS_PATTERN AS 
SELECT 
        PATTERN_ID                    ,
        PATTERN_NAME                  ,
        CONCAT(PATTERN_ID,':',PATTERN_NAME) PATTERN,
        ITA_EXT_STM_ID                ,
        TIME_LIMIT                    ,
        ANS_HOST_DESIGNATE_TYPE_ID    ,
        ANS_PARALLEL_EXE              ,
        ANS_WINRM_ID                  ,
        ANS_PLAYBOOK_HED_DEF          ,
        ANS_EXEC_OPTIONS              ,
        ANS_VIRTUALENV_NAME           ,
        (SELECT 
           COUNT(*) 
         FROM 
           B_ANS_LNS_PTN_VARS_LINK TBL_S
         WHERE
           TBL_S.PATTERN_ID = TAB_A.PATTERN_ID AND
           DISUSE_FLAG = '0'
        ) VARS_COUNT                  ,
        DISP_SEQ                      ,
        ACCESS_AUTH                   ,
        NOTE                          ,
        DISUSE_FLAG                   ,
        LAST_UPDATE_TIMESTAMP         ,
        LAST_UPDATE_USER
FROM C_PATTERN_PER_ORCH TAB_A
WHERE TAB_A.ITA_EXT_STM_ID = 3;

CREATE OR REPLACE VIEW E_ANSIBLE_LNS_PATTERN_JNL AS 
SELECT 
        JOURNAL_SEQ_NO                ,
        JOURNAL_REG_DATETIME          ,
        JOURNAL_ACTION_CLASS          ,
        PATTERN_ID                    ,
        PATTERN_NAME                  ,
        CONCAT(PATTERN_ID,':',PATTERN_NAME) PATTERN,
        ITA_EXT_STM_ID                ,
        TIME_LIMIT                    ,
        ANS_HOST_DESIGNATE_TYPE_ID    ,
        ANS_PARALLEL_EXE              ,
        ANS_WINRM_ID                  ,
        ANS_PLAYBOOK_HED_DEF      ,
        ANS_EXEC_OPTIONS              ,
        ANS_VIRTUALENV_NAME           ,
        (SELECT 
           COUNT(*) 
         FROM 
           B_ANS_LNS_PTN_VARS_LINK_JNL TBL_S
         WHERE
           TBL_S.PATTERN_ID = TAB_A.PATTERN_ID AND
           DISUSE_FLAG = '0'
        ) VARS_COUNT                  ,
        DISP_SEQ                      ,
        ACCESS_AUTH                   ,
        NOTE                          ,
        DISUSE_FLAG                   ,
        LAST_UPDATE_TIMESTAMP         ,
        LAST_UPDATE_USER
FROM C_PATTERN_PER_ORCH_JNL TAB_A
WHERE TAB_A.ITA_EXT_STM_ID = 3;

CREATE OR REPLACE VIEW D_ANS_LNS_PTN_VARS_LINK AS 
SELECT 
        TAB_A.VARS_LINK_ID            ,
        TAB_A.PATTERN_ID              ,
        TAB_B.PATTERN_NAME            ,
        TAB_A.VARS_NAME_ID            ,
        TAB_C.VARS_NAME               ,
        CONCAT(TAB_A.VARS_LINK_ID,':',TAB_C.VARS_NAME) VARS_LINK_PULLDOWN,
        TAB_A.DISP_SEQ                ,
        TAB_A.ACCESS_AUTH             ,
        TAB_A.NOTE                    ,
        TAB_A.DISUSE_FLAG             ,
        TAB_A.LAST_UPDATE_TIMESTAMP   ,
        TAB_A.LAST_UPDATE_USER
FROM B_ANS_LNS_PTN_VARS_LINK     TAB_A
LEFT JOIN E_ANSIBLE_LNS_PATTERN      TAB_B ON ( TAB_A.PATTERN_ID = TAB_B.PATTERN_ID )
LEFT JOIN B_ANSIBLE_LNS_VARS_MASTER  TAB_C ON ( TAB_A.VARS_NAME_ID = TAB_C.VARS_NAME_ID )
;

CREATE OR REPLACE VIEW D_ANS_LNS_PTN_VARS_LINK_JNL AS 
SELECT 
        JOURNAL_SEQ_NO                ,
        JOURNAL_REG_DATETIME          ,
        JOURNAL_ACTION_CLASS          ,
        TAB_A.VARS_LINK_ID            ,
        TAB_A.PATTERN_ID              ,
        TAB_B.PATTERN_NAME            ,
        TAB_A.VARS_NAME_ID            ,
        TAB_C.VARS_NAME               ,
        CONCAT(TAB_A.VARS_LINK_ID,':',TAB_C.VARS_NAME) VARS_LINK_PULLDOWN,
        TAB_A.DISP_SEQ                ,
        TAB_A.ACCESS_AUTH             ,
        TAB_A.NOTE                    ,
        TAB_A.DISUSE_FLAG             ,
        TAB_A.LAST_UPDATE_TIMESTAMP   ,
        TAB_A.LAST_UPDATE_USER
FROM B_ANS_LNS_PTN_VARS_LINK_JNL TAB_A
LEFT JOIN E_ANSIBLE_LNS_PATTERN      TAB_B ON ( TAB_A.PATTERN_ID = TAB_B.PATTERN_ID )
LEFT JOIN B_ANSIBLE_LNS_VARS_MASTER  TAB_C ON ( TAB_A.VARS_NAME_ID = TAB_C.VARS_NAME_ID )
;

CREATE OR REPLACE VIEW D_ANS_LNS_PTN_VARS_LINK_VFP AS 
SELECT 
        TAB_A.VARS_LINK_ID            ,
        TAB_A.PATTERN_ID              ,
        TAB_B.PATTERN_NAME            ,
        TAB_A.VARS_NAME_ID            ,
        TAB_C.VARS_NAME               ,
        CONCAT(TAB_A.VARS_LINK_ID,':',TAB_C.VARS_NAME) VARS_LINK_PULLDOWN,
        TAB_A.DISP_SEQ                ,
        TAB_A.ACCESS_AUTH             ,
        TAB_A.NOTE                    ,
        TAB_A.DISUSE_FLAG             ,
        TAB_A.LAST_UPDATE_TIMESTAMP   ,
        TAB_A.LAST_UPDATE_USER
FROM B_ANS_LNS_PTN_VARS_LINK     TAB_A
LEFT JOIN E_ANSIBLE_LNS_PATTERN      TAB_B ON ( TAB_A.PATTERN_ID = TAB_B.PATTERN_ID )
LEFT JOIN B_ANSIBLE_LNS_VARS_MASTER  TAB_C ON ( TAB_A.VARS_NAME_ID = TAB_C.VARS_NAME_ID )
WHERE TAB_A.DISUSE_FLAG = '0'
AND TAB_B.DISUSE_FLAG = '0'
AND TAB_C.DISUSE_FLAG = '0'
;

CREATE OR REPLACE VIEW E_ANSIBLE_LNS_EXE_INS_MNG AS
SELECT 
         TAB_A.EXECUTION_NO              ,
         TAB_A.SYMPHONY_NAME             ,
         TAB_A.EXECUTION_USER            ,
         TAB_A.STATUS_ID                 ,
         TAB_C.STATUS_NAME               ,
         TAB_A.SYMPHONY_INSTANCE_NO      ,
         TAB_A.PATTERN_ID                ,
         TAB_A.I_PATTERN_NAME            ,
         TAB_A.I_TIME_LIMIT              ,
         TAB_A.I_ANS_HOST_DESIGNATE_TYPE_ID ,
         TAB_E.HOST_DESIGNATE_TYPE_NAME    ANS_HOST_DESIGNATE_TYPE_NAME,
         TAB_A.I_ANS_PARALLEL_EXE        ,
         TAB_A.I_ANS_WINRM_ID            ,
         TAB_A.I_ANS_PLAYBOOK_HED_DEF,
         TAB_A.I_ANS_EXEC_OPTIONS        ,
         TAB_F.FLAG_NAME                   ANS_WINRM_FLAG_NAME,
         TAB_A.OPERATION_NO_UAPK         ,
         TAB_A.I_OPERATION_NAME          ,
         TAB_A.I_OPERATION_NO_IDBH       ,
         TAB_A.I_VIRTUALENV_NAME         ,
         TAB_A.TIME_BOOK                 ,
         TAB_A.TIME_START                ,
         TAB_A.TIME_END                  ,
         TAB_A.FILE_INPUT                ,
         TAB_A.FILE_RESULT               ,
         TAB_A.RUN_MODE                  ,
         TAB_D.RUN_MODE_NAME             ,
         TAB_A.EXEC_MODE                 ,
         TAB_G.NAME AS EXEC_MODE_NAME    ,
         TAB_A.MULTIPLELOG_MODE          ,
         TAB_A.LOGFILELIST_JSON          ,
         TAB_A.CONDUCTOR_NAME            ,
         TAB_A.CONDUCTOR_INSTANCE_NO     ,
         TAB_A.DISP_SEQ                  ,
         TAB_A.ACCESS_AUTH               ,
         TAB_A.NOTE                      ,
         TAB_A.DISUSE_FLAG               ,
         TAB_A.LAST_UPDATE_TIMESTAMP     ,
         TAB_A.LAST_UPDATE_USER
FROM C_ANSIBLE_LNS_EXE_INS_MNG       TAB_A
LEFT JOIN E_ANSIBLE_LNS_PATTERN      TAB_B ON ( TAB_B.PATTERN_ID = TAB_A.PATTERN_ID )
LEFT JOIN D_ANSIBLE_LNS_INS_STATUS   TAB_C ON ( TAB_A.STATUS_ID = TAB_C.STATUS_ID )
LEFT JOIN D_ANSIBLE_LNS_INS_RUN_MODE TAB_D ON ( TAB_A.RUN_MODE = TAB_D.RUN_MODE_ID )
LEFT JOIN B_HOST_DESIGNATE_TYPE_LIST TAB_E ON ( TAB_A.I_ANS_HOST_DESIGNATE_TYPE_ID = TAB_E.HOST_DESIGNATE_TYPE_ID )
LEFT JOIN D_FLAG_LIST_01             TAB_F ON ( TAB_A.I_ANS_WINRM_ID = TAB_F.FLAG_ID )
LEFT JOIN B_ANSIBLE_EXEC_MODE        TAB_G ON ( TAB_A.EXEC_MODE = TAB_G.ID )
;

CREATE OR REPLACE VIEW E_ANSIBLE_LNS_EXE_INS_MNG_JNL AS 
SELECT 
         TAB_A.JOURNAL_SEQ_NO            ,
         TAB_A.JOURNAL_REG_DATETIME      ,
         TAB_A.JOURNAL_ACTION_CLASS      ,
         TAB_A.EXECUTION_NO              ,
         TAB_A.SYMPHONY_NAME             ,
         TAB_A.EXECUTION_USER            ,
         TAB_A.STATUS_ID                 ,
         TAB_C.STATUS_NAME               ,
         TAB_A.SYMPHONY_INSTANCE_NO      ,
         TAB_A.PATTERN_ID                ,
         TAB_A.I_PATTERN_NAME            ,
         TAB_A.I_ANS_HOST_DESIGNATE_TYPE_ID ,
         TAB_E.HOST_DESIGNATE_TYPE_NAME    ANS_HOST_DESIGNATE_TYPE_NAME,
         TAB_A.I_ANS_PARALLEL_EXE        ,
         TAB_A.I_ANS_WINRM_ID            ,
         TAB_A.I_ANS_PLAYBOOK_HED_DEF    ,
         TAB_A.I_ANS_EXEC_OPTIONS        ,
         TAB_F.FLAG_NAME                   ANS_WINRM_FLAG_NAME,
         TAB_A.I_TIME_LIMIT              ,
         TAB_A.OPERATION_NO_UAPK         ,
         TAB_A.I_OPERATION_NAME          ,
         TAB_A.I_OPERATION_NO_IDBH       ,
         TAB_A.I_VIRTUALENV_NAME         ,
         TAB_A.TIME_BOOK                 ,
         TAB_A.TIME_START                ,
         TAB_A.TIME_END                  ,
         TAB_A.FILE_INPUT                ,
         TAB_A.FILE_RESULT               ,
         TAB_A.RUN_MODE                  ,
         TAB_D.RUN_MODE_NAME             ,
         TAB_A.EXEC_MODE                 ,
         TAB_G.NAME AS EXEC_MODE_NAME    ,
         TAB_A.MULTIPLELOG_MODE          ,
         TAB_A.LOGFILELIST_JSON          ,
         TAB_A.CONDUCTOR_NAME            ,
         TAB_A.CONDUCTOR_INSTANCE_NO     ,
         TAB_A.DISP_SEQ                  ,
         TAB_A.ACCESS_AUTH               ,
         TAB_A.NOTE                      ,
         TAB_A.DISUSE_FLAG               ,
         TAB_A.LAST_UPDATE_TIMESTAMP     ,
         TAB_A.LAST_UPDATE_USER           
FROM C_ANSIBLE_LNS_EXE_INS_MNG_JNL   TAB_A
LEFT JOIN E_ANSIBLE_LNS_PATTERN      TAB_B ON ( TAB_B.PATTERN_ID = TAB_A.PATTERN_ID )
LEFT JOIN D_ANSIBLE_LNS_INS_STATUS   TAB_C ON ( TAB_A.STATUS_ID = TAB_C.STATUS_ID )
LEFT JOIN D_ANSIBLE_LNS_INS_RUN_MODE TAB_D ON ( TAB_A.RUN_MODE = TAB_D.RUN_MODE_ID )
LEFT JOIN B_HOST_DESIGNATE_TYPE_LIST TAB_E ON ( TAB_A.I_ANS_HOST_DESIGNATE_TYPE_ID = TAB_E.HOST_DESIGNATE_TYPE_ID )
LEFT JOIN D_FLAG_LIST_01             TAB_F ON ( TAB_A.I_ANS_WINRM_ID = TAB_F.FLAG_ID )
LEFT JOIN B_ANSIBLE_EXEC_MODE        TAB_G ON ( TAB_A.EXEC_MODE = TAB_G.ID )
;

CREATE OR REPLACE VIEW E_OPE_FOR_PULLDOWN_LNS
AS 
SELECT TAB_A.OPERATION_NO_UAPK    ,
       TAB_A.OPERATION_NAME       ,
       TAB_A.OPERATION_DATE       ,
       TAB_A.OPERATION_NO_IDBH    ,
       TAB_A.OPERATION            ,
       TAB_A.DISP_SEQ             ,
       TAB_A.ACCESS_AUTH          ,
       TAB_A.NOTE                 ,
       TAB_A.DISUSE_FLAG          ,
       TAB_A.LAST_UPDATE_TIMESTAMP,
       TAB_A.LAST_UPDATE_USER     ,
       TAB_B.PHO_LINK_ID          ,
       TAB_B.DISUSE_FLAG           DISUSE_FLAG_2
FROM 
    E_OPERATION_LIST TAB_A
    LEFT JOIN B_ANSIBLE_LNS_PHO_LINK TAB_B ON (TAB_A.OPERATION_NO_UAPK = TAB_B.OPERATION_NO_UAPK)
WHERE
    TAB_A.DISUSE_FLAG IN ('0') 
    AND
    TAB_B.PHO_LINK_ID IS NOT NULL 
    AND 
    TAB_B.DISUSE_FLAG IN ('0')
;

DROP VIEW D_ANSIBLE_LNS_VARS_ASSIGN;

ALTER TABLE B_OS_TYPE ADD COLUMN ACCESS_AUTH TEXT AFTER DISP_SEQ;

ALTER TABLE B_OS_TYPE_JNL ADD COLUMN ACCESS_AUTH TEXT AFTER DISP_SEQ;

ALTER TABLE B_ANSIBLE_PNS_DIALOG_TYPE ADD COLUMN ACCESS_AUTH TEXT AFTER DISP_SEQ;

ALTER TABLE B_ANSIBLE_PNS_DIALOG_TYPE_JNL ADD COLUMN ACCESS_AUTH TEXT AFTER DISP_SEQ;

ALTER TABLE B_ANSIBLE_PNS_DIALOG ADD COLUMN ACCESS_AUTH TEXT AFTER DISP_SEQ;

ALTER TABLE B_ANSIBLE_PNS_DIALOG_JNL ADD COLUMN ACCESS_AUTH TEXT AFTER DISP_SEQ;

ALTER TABLE B_ANSIBLE_PNS_PATTERN_LINK ADD COLUMN ACCESS_AUTH TEXT AFTER DISP_SEQ;

ALTER TABLE B_ANSIBLE_PNS_PATTERN_LINK_JNL ADD COLUMN ACCESS_AUTH TEXT AFTER DISP_SEQ;

ALTER TABLE B_ANSIBLE_PNS_PHO_LINK ADD COLUMN ACCESS_AUTH TEXT AFTER DISP_SEQ;

ALTER TABLE B_ANSIBLE_PNS_PHO_LINK_JNL ADD COLUMN ACCESS_AUTH TEXT AFTER DISP_SEQ;

ALTER TABLE B_ANSIBLE_PNS_VARS_MASTER ADD COLUMN ACCESS_AUTH TEXT AFTER DISP_SEQ;

ALTER TABLE B_ANSIBLE_PNS_VARS_MASTER_JNL ADD COLUMN ACCESS_AUTH TEXT AFTER DISP_SEQ;

ALTER TABLE B_ANS_PNS_PTN_VARS_LINK ADD COLUMN ACCESS_AUTH TEXT AFTER DISP_SEQ;

ALTER TABLE B_ANS_PNS_PTN_VARS_LINK_JNL ADD COLUMN ACCESS_AUTH TEXT AFTER DISP_SEQ;

ALTER TABLE B_ANSIBLE_PNS_VARS_ASSIGN MODIFY COLUMN VARS_ENTRY TEXT;
ALTER TABLE B_ANSIBLE_PNS_VARS_ASSIGN ADD COLUMN SENSITIVE_FLAG VARCHAR(1) AFTER VARS_ENTRY;
ALTER TABLE B_ANSIBLE_PNS_VARS_ASSIGN ADD COLUMN ACCESS_AUTH TEXT AFTER DISP_SEQ;

ALTER TABLE B_ANSIBLE_PNS_VARS_ASSIGN_JNL MODIFY COLUMN VARS_ENTRY TEXT;
ALTER TABLE B_ANSIBLE_PNS_VARS_ASSIGN_JNL ADD COLUMN SENSITIVE_FLAG VARCHAR(1) AFTER VARS_ENTRY;
ALTER TABLE B_ANSIBLE_PNS_VARS_ASSIGN_JNL ADD COLUMN ACCESS_AUTH TEXT AFTER DISP_SEQ;

ALTER TABLE C_ANSIBLE_PNS_EXE_INS_MNG ADD COLUMN COLLECT_STATUS INT AFTER CONDUCTOR_INSTANCE_NO;
ALTER TABLE C_ANSIBLE_PNS_EXE_INS_MNG ADD COLUMN COLLECT_LOG VARCHAR(1024) AFTER COLLECT_STATUS;
ALTER TABLE C_ANSIBLE_PNS_EXE_INS_MNG ADD COLUMN ACCESS_AUTH TEXT AFTER DISP_SEQ;

ALTER TABLE C_ANSIBLE_PNS_EXE_INS_MNG_JNL ADD COLUMN COLLECT_STATUS INT AFTER CONDUCTOR_INSTANCE_NO;
ALTER TABLE C_ANSIBLE_PNS_EXE_INS_MNG_JNL ADD COLUMN COLLECT_LOG VARCHAR(1024) AFTER COLLECT_STATUS;
ALTER TABLE C_ANSIBLE_PNS_EXE_INS_MNG_JNL ADD COLUMN ACCESS_AUTH TEXT AFTER DISP_SEQ;

CREATE OR REPLACE VIEW D_OS_TYPE 
AS 
SELECT * 
FROM B_OS_TYPE;

CREATE OR REPLACE VIEW D_OS_TYPE_JNL 
AS 
SELECT * 
FROM B_OS_TYPE_JNL;

CREATE OR REPLACE VIEW D_OS_TYPE_SV 
AS 
SELECT * 
FROM B_OS_TYPE 
WHERE HARDAWRE_TYPE_SV=1;

CREATE OR REPLACE VIEW D_OS_TYPE_SV_JNL 
AS 
SELECT * 
FROM B_OS_TYPE_JNL 
WHERE HARDAWRE_TYPE_SV=1;

CREATE OR REPLACE VIEW D_OS_TYPE_ST 
AS 
SELECT * 
FROM B_OS_TYPE 
WHERE HARDAWRE_TYPE_ST=1;

CREATE OR REPLACE VIEW D_OS_TYPE_ST_JNL 
AS 
SELECT * 
FROM B_OS_TYPE_JNL 
WHERE HARDAWRE_TYPE_ST=1;

CREATE OR REPLACE VIEW D_OS_TYPE_NW 
AS 
SELECT * 
FROM B_OS_TYPE 
WHERE HARDAWRE_TYPE_NW=1;

CREATE OR REPLACE VIEW D_OS_TYPE_NW_JNL 
AS 
SELECT * 
FROM B_OS_TYPE_JNL 
WHERE HARDAWRE_TYPE_NW=1;


CREATE OR REPLACE VIEW D_ANSIBLE_PNS_INS_STATUS     AS 
SELECT * 
FROM B_ANSIBLE_STATUS;

CREATE OR REPLACE VIEW D_ANSIBLE_PNS_INS_STATUS_JNL AS 
SELECT * 
FROM B_ANSIBLE_STATUS_JNL;

CREATE OR REPLACE VIEW D_ANSIBLE_PNS_IF_INFO     AS 
SELECT * 
FROM B_ANSIBLE_IF_INFO;

CREATE OR REPLACE VIEW D_ANSIBLE_PNS_IF_INFO_JNL AS 
SELECT * 
FROM B_ANSIBLE_IF_INFO_JNL;

CREATE OR REPLACE VIEW D_ANSIBLE_PNS_INS_RUN_MODE     AS 
SELECT * 
FROM B_ANSIBLE_RUN_MODE;

CREATE OR REPLACE VIEW D_ANSIBLE_PNS_INS_RUN_MODE_JNL AS 
SELECT * 
FROM B_ANSIBLE_RUN_MODE_JNL;

CREATE OR REPLACE VIEW D_ANSIBLE_PNS_DIALOG_TYPE     AS 
SELECT * 
FROM B_ANSIBLE_PNS_DIALOG_TYPE;

CREATE OR REPLACE VIEW D_ANSIBLE_PNS_DIALOG_TYPE_JNL AS 
SELECT * 
FROM B_ANSIBLE_PNS_DIALOG_TYPE_JNL;

CREATE OR REPLACE VIEW D_ANSIBLE_PNS_DIALOG AS 
SELECT  DIALOG_MATTER_ID        ,
        CONCAT(DIALOG_MATTER_ID,':',DIALOG_MATTER_FILE) DIALOG,
        DIALOG_MATTER_FILE      ,
        DISP_SEQ                ,
        ACCESS_AUTH             ,
        NOTE                    ,
        DISUSE_FLAG             ,
        LAST_UPDATE_TIMESTAMP   ,
        LAST_UPDATE_USER
FROM    B_ANSIBLE_PNS_DIALOG;

CREATE OR REPLACE VIEW D_ANSIBLE_PNS_DIALOG_JNL AS 
SELECT  JOURNAL_SEQ_NO          ,
        JOURNAL_REG_DATETIME    ,
        JOURNAL_ACTION_CLASS    ,
        DIALOG_MATTER_ID        ,
        CONCAT(DIALOG_MATTER_ID,':',DIALOG_MATTER_FILE) DIALOG,
        DIALOG_MATTER_FILE      ,
        DISP_SEQ                ,
        ACCESS_AUTH             ,
        NOTE                    ,
        DISUSE_FLAG             ,
        LAST_UPDATE_TIMESTAMP   ,
        LAST_UPDATE_USER
FROM B_ANSIBLE_PNS_DIALOG_JNL;

CREATE OR REPLACE VIEW E_ANSIBLE_PNS_PATTERN AS 
SELECT 
        PATTERN_ID                    ,
        PATTERN_NAME                  ,
        CONCAT(PATTERN_ID,':',PATTERN_NAME) PATTERN,
        ITA_EXT_STM_ID                ,
        TIME_LIMIT                    ,
        ANS_HOST_DESIGNATE_TYPE_ID    ,
        ANS_PARALLEL_EXE              ,
        ANS_VIRTUALENV_NAME           ,
        (SELECT 
           COUNT(*) 
         FROM 
           B_ANS_PNS_PTN_VARS_LINK TBL_S
         WHERE
           TBL_S.PATTERN_ID = TAB_A.PATTERN_ID AND
           DISUSE_FLAG = '0'
        ) VARS_COUNT                  ,
        ANS_EXEC_OPTIONS              ,
        DISP_SEQ                      ,
        ACCESS_AUTH                   ,
        NOTE                          ,
        DISUSE_FLAG                   ,
        LAST_UPDATE_TIMESTAMP         ,
        LAST_UPDATE_USER
FROM C_PATTERN_PER_ORCH TAB_A
WHERE TAB_A.ITA_EXT_STM_ID = 4;

CREATE OR REPLACE VIEW E_ANSIBLE_PNS_PATTERN_JNL AS 
SELECT 
        JOURNAL_SEQ_NO                ,
        JOURNAL_REG_DATETIME          ,
        JOURNAL_ACTION_CLASS          ,
        PATTERN_ID                    ,
        PATTERN_NAME                  ,
        CONCAT(PATTERN_ID,':',PATTERN_NAME) PATTERN,
        ITA_EXT_STM_ID                ,
        TIME_LIMIT                    ,
        ANS_HOST_DESIGNATE_TYPE_ID    ,
        ANS_PARALLEL_EXE              ,
        ANS_VIRTUALENV_NAME           ,
        (SELECT 
           COUNT(*) 
         FROM 
           B_ANS_PNS_PTN_VARS_LINK_JNL TBL_S
         WHERE
           TBL_S.PATTERN_ID = TAB_A.PATTERN_ID AND
           DISUSE_FLAG = '0'
        ) VARS_COUNT                  ,
        ANS_EXEC_OPTIONS              ,
        DISP_SEQ                      ,
        ACCESS_AUTH                   ,
        NOTE                          ,
        DISUSE_FLAG                   ,
        LAST_UPDATE_TIMESTAMP         ,
        LAST_UPDATE_USER
FROM C_PATTERN_PER_ORCH_JNL TAB_A
WHERE TAB_A.ITA_EXT_STM_ID = 4;

CREATE OR REPLACE VIEW D_ANS_PNS_PTN_VARS_LINK AS 
SELECT 
        TAB_A.VARS_LINK_ID            ,
        TAB_A.PATTERN_ID              ,
        TAB_B.PATTERN_NAME            ,
        TAB_A.VARS_NAME_ID            ,
        TAB_C.VARS_NAME               ,
        CONCAT(TAB_A.VARS_LINK_ID,':',TAB_C.VARS_NAME) VARS_LINK_PULLDOWN,
        TAB_A.DISP_SEQ                ,
        TAB_A.ACCESS_AUTH             ,
        TAB_A.NOTE                    ,
        TAB_A.DISUSE_FLAG             ,
        TAB_A.LAST_UPDATE_TIMESTAMP   ,
        TAB_A.LAST_UPDATE_USER
FROM B_ANS_PNS_PTN_VARS_LINK     TAB_A
LEFT JOIN E_ANSIBLE_PNS_PATTERN      TAB_B ON ( TAB_A.PATTERN_ID = TAB_B.PATTERN_ID )
LEFT JOIN B_ANSIBLE_PNS_VARS_MASTER  TAB_C ON ( TAB_A.VARS_NAME_ID = TAB_C.VARS_NAME_ID )
;

CREATE OR REPLACE VIEW D_ANS_PNS_PTN_VARS_LINK_JNL AS 
SELECT 
        JOURNAL_SEQ_NO                ,
        JOURNAL_REG_DATETIME          ,
        JOURNAL_ACTION_CLASS          ,
        TAB_A.VARS_LINK_ID            ,
        TAB_A.PATTERN_ID              ,
        TAB_B.PATTERN_NAME            ,
        TAB_A.VARS_NAME_ID            ,
        TAB_C.VARS_NAME               ,
        CONCAT(TAB_A.VARS_LINK_ID,':',TAB_C.VARS_NAME) VARS_LINK_PULLDOWN,
        TAB_A.DISP_SEQ                ,
        TAB_A.ACCESS_AUTH             ,
        TAB_A.NOTE                    ,
        TAB_A.DISUSE_FLAG             ,
        TAB_A.LAST_UPDATE_TIMESTAMP   ,
        TAB_A.LAST_UPDATE_USER
FROM B_ANS_PNS_PTN_VARS_LINK_JNL TAB_A
LEFT JOIN E_ANSIBLE_PNS_PATTERN      TAB_B ON ( TAB_A.PATTERN_ID = TAB_B.PATTERN_ID )
LEFT JOIN B_ANSIBLE_PNS_VARS_MASTER  TAB_C ON ( TAB_A.VARS_NAME_ID = TAB_C.VARS_NAME_ID )
;

CREATE OR REPLACE VIEW D_ANS_PNS_PTN_VARS_LINK_VFP AS 
SELECT 
        TAB_A.VARS_LINK_ID            ,
        TAB_A.PATTERN_ID              ,
        TAB_B.PATTERN_NAME            ,
        TAB_A.VARS_NAME_ID            ,
        TAB_C.VARS_NAME               ,
        CONCAT(TAB_A.VARS_LINK_ID,':',TAB_C.VARS_NAME) VARS_LINK_PULLDOWN,
        TAB_A.DISP_SEQ                ,
        TAB_A.ACCESS_AUTH             ,
        TAB_A.NOTE                    ,
        TAB_A.DISUSE_FLAG             ,
        TAB_A.LAST_UPDATE_TIMESTAMP   ,
        TAB_A.LAST_UPDATE_USER
FROM B_ANS_PNS_PTN_VARS_LINK     TAB_A
LEFT JOIN E_ANSIBLE_PNS_PATTERN      TAB_B ON ( TAB_A.PATTERN_ID = TAB_B.PATTERN_ID )
LEFT JOIN B_ANSIBLE_PNS_VARS_MASTER  TAB_C ON ( TAB_A.VARS_NAME_ID = TAB_C.VARS_NAME_ID )
WHERE TAB_A.DISUSE_FLAG = '0'
AND TAB_B.DISUSE_FLAG = '0'
AND TAB_C.DISUSE_FLAG = '0'
;

CREATE OR REPLACE VIEW E_ANSIBLE_PNS_EXE_INS_MNG AS
SELECT 
         TAB_A.EXECUTION_NO              ,
         TAB_A.SYMPHONY_NAME             ,
         TAB_A.EXECUTION_USER            ,
         TAB_A.STATUS_ID                 ,
         TAB_C.STATUS_NAME               ,
         TAB_A.SYMPHONY_INSTANCE_NO      ,
         TAB_A.PATTERN_ID                ,
         TAB_A.I_PATTERN_NAME            ,
         TAB_A.I_TIME_LIMIT              ,
         TAB_A.I_ANS_HOST_DESIGNATE_TYPE_ID ,
         TAB_A.I_ANS_PARALLEL_EXE        ,
         TAB_A.I_ANS_WINRM_ID            ,
         TAB_A.I_ANS_PLAYBOOK_HED_DEF    ,
         TAB_A.I_ANS_EXEC_OPTIONS        ,
         TAB_F.FLAG_NAME                   ANS_WINRM_FLAG_NAME,
         TAB_E.HOST_DESIGNATE_TYPE_NAME    ANS_HOST_DESIGNATE_TYPE_NAME,
         TAB_A.OPERATION_NO_UAPK         ,
         TAB_A.I_OPERATION_NAME          ,
         TAB_A.I_OPERATION_NO_IDBH       ,
         TAB_A.I_VIRTUALENV_NAME         ,         
         TAB_A.TIME_BOOK                 ,
         TAB_A.TIME_START                ,
         TAB_A.TIME_END                  ,
         TAB_A.FILE_INPUT                ,
         TAB_A.FILE_RESULT               ,
         TAB_A.RUN_MODE                  ,
         TAB_D.RUN_MODE_NAME             ,
         TAB_A.EXEC_MODE                 ,
         TAB_G.NAME AS EXEC_MODE_NAME    ,
         TAB_A.MULTIPLELOG_MODE          ,
         TAB_A.LOGFILELIST_JSON          ,
         TAB_A.CONDUCTOR_NAME            ,
         TAB_A.CONDUCTOR_INSTANCE_NO     ,
         TAB_A.DISP_SEQ                  ,
         TAB_A.ACCESS_AUTH               ,
         TAB_A.NOTE                      ,
         TAB_A.DISUSE_FLAG               ,
         TAB_A.LAST_UPDATE_TIMESTAMP     ,
         TAB_A.LAST_UPDATE_USER
FROM C_ANSIBLE_PNS_EXE_INS_MNG       TAB_A
LEFT JOIN E_ANSIBLE_PNS_PATTERN      TAB_B ON ( TAB_B.PATTERN_ID = TAB_A.PATTERN_ID )
LEFT JOIN D_ANSIBLE_PNS_INS_STATUS   TAB_C ON ( TAB_A.STATUS_ID = TAB_C.STATUS_ID )
LEFT JOIN D_ANSIBLE_PNS_INS_RUN_MODE TAB_D ON ( TAB_A.RUN_MODE = TAB_D.RUN_MODE_ID )
LEFT JOIN B_HOST_DESIGNATE_TYPE_LIST TAB_E ON ( TAB_A.I_ANS_HOST_DESIGNATE_TYPE_ID = TAB_E.HOST_DESIGNATE_TYPE_ID )
LEFT JOIN D_FLAG_LIST_01             TAB_F ON ( TAB_A.I_ANS_WINRM_ID = TAB_F.FLAG_ID )
LEFT JOIN B_ANSIBLE_EXEC_MODE        TAB_G ON ( TAB_A.EXEC_MODE = TAB_G.ID )
;

CREATE OR REPLACE VIEW E_ANSIBLE_PNS_EXE_INS_MNG_JNL AS 
SELECT 
         TAB_A.JOURNAL_SEQ_NO            ,
         TAB_A.JOURNAL_REG_DATETIME      ,
         TAB_A.JOURNAL_ACTION_CLASS      ,
         TAB_A.EXECUTION_NO              ,
         TAB_A.SYMPHONY_NAME             ,
         TAB_A.EXECUTION_USER            ,
         TAB_A.STATUS_ID                 ,
         TAB_C.STATUS_NAME               ,
         TAB_A.SYMPHONY_INSTANCE_NO      ,
         TAB_A.PATTERN_ID                ,
         TAB_A.I_PATTERN_NAME            ,
         TAB_A.I_TIME_LIMIT              ,
         TAB_A.I_ANS_HOST_DESIGNATE_TYPE_ID ,
         TAB_A.I_ANS_PARALLEL_EXE        ,
         TAB_A.I_ANS_WINRM_ID            ,
         TAB_A.I_ANS_PLAYBOOK_HED_DEF    ,
         TAB_A.I_ANS_EXEC_OPTIONS        ,
         TAB_F.FLAG_NAME                   ANS_WINRM_FLAG_NAME,
         TAB_E.HOST_DESIGNATE_TYPE_NAME    ANS_HOST_DESIGNATE_TYPE_NAME,
         TAB_A.OPERATION_NO_UAPK         ,
         TAB_A.I_OPERATION_NAME          ,
         TAB_A.I_OPERATION_NO_IDBH       ,
         TAB_A.I_VIRTUALENV_NAME         ,         
         TAB_A.TIME_BOOK                 ,
         TAB_A.TIME_START                ,
         TAB_A.TIME_END                  ,
         TAB_A.FILE_INPUT                ,
         TAB_A.FILE_RESULT               ,
         TAB_A.RUN_MODE                  ,
         TAB_D.RUN_MODE_NAME             ,
         TAB_A.EXEC_MODE                 ,
         TAB_G.NAME AS EXEC_MODE_NAME    ,
         TAB_A.MULTIPLELOG_MODE          ,
         TAB_A.LOGFILELIST_JSON          ,
         TAB_A.CONDUCTOR_NAME            ,
         TAB_A.CONDUCTOR_INSTANCE_NO     ,
         TAB_A.DISP_SEQ                  ,
         TAB_A.ACCESS_AUTH               ,
         TAB_A.NOTE                      ,
         TAB_A.DISUSE_FLAG               ,
         TAB_A.LAST_UPDATE_TIMESTAMP     ,
         TAB_A.LAST_UPDATE_USER           
FROM C_ANSIBLE_PNS_EXE_INS_MNG_JNL   TAB_A
LEFT JOIN E_ANSIBLE_PNS_PATTERN      TAB_B ON ( TAB_B.PATTERN_ID = TAB_A.PATTERN_ID )
LEFT JOIN D_ANSIBLE_PNS_INS_STATUS   TAB_C ON ( TAB_A.STATUS_ID = TAB_C.STATUS_ID )
LEFT JOIN D_ANSIBLE_PNS_INS_RUN_MODE TAB_D ON ( TAB_A.RUN_MODE = TAB_D.RUN_MODE_ID )
LEFT JOIN B_HOST_DESIGNATE_TYPE_LIST TAB_E ON ( TAB_A.I_ANS_HOST_DESIGNATE_TYPE_ID = TAB_E.HOST_DESIGNATE_TYPE_ID )
LEFT JOIN D_FLAG_LIST_01             TAB_F ON ( TAB_A.I_ANS_WINRM_ID = TAB_F.FLAG_ID )
LEFT JOIN B_ANSIBLE_EXEC_MODE        TAB_G ON ( TAB_A.EXEC_MODE = TAB_G.ID )
;

CREATE OR REPLACE VIEW E_OPE_FOR_PULLDOWN_PNS
AS 
SELECT TAB_A.OPERATION_NO_UAPK    ,
       TAB_A.OPERATION_NAME       ,
       TAB_A.OPERATION_DATE       ,
       TAB_A.OPERATION_NO_IDBH    ,
       TAB_A.OPERATION            ,
       TAB_A.DISP_SEQ             ,
       TAB_A.ACCESS_AUTH          ,
       TAB_A.NOTE                 ,
       TAB_A.DISUSE_FLAG          ,
       TAB_A.LAST_UPDATE_TIMESTAMP,
       TAB_A.LAST_UPDATE_USER     ,
       TAB_B.PHO_LINK_ID          ,
       TAB_B.DISUSE_FLAG           DISUSE_FLAG_2
FROM 
    E_OPERATION_LIST TAB_A
    LEFT JOIN B_ANSIBLE_PNS_PHO_LINK TAB_B ON (TAB_A.OPERATION_NO_UAPK = TAB_B.OPERATION_NO_UAPK)
WHERE
    TAB_A.DISUSE_FLAG IN ('0') 
    AND
    TAB_B.PHO_LINK_ID IS NOT NULL 
    AND 
    TAB_B.DISUSE_FLAG IN ('0')
;

DROP VIEW D_ANSIBLE_PNS_VARS_ASSIGN;

DROP VIEW D_ANS_PNS_CMDB_MENU_COLUMN;

DROP VIEW D_ANS_PNS_CMDB_MENU_COLUMN_JNL;

DROP VIEW D_ANS_PNS_CMDB_MENU_LIST;

DROP VIEW D_ANS_PNS_CMDB_MENU_LIST_JNL;

DROP VIEW D_ANS_PNS_CMDB_MG_MU_COL_LIST;

DROP VIEW D_ANS_PNS_CMDB_MG_MU_COL_LIST_JNL;

ALTER TABLE C_ANSIBLE_LRL_EXE_INS_MNG ADD COLUMN COLLECT_STATUS INT AFTER CONDUCTOR_INSTANCE_NO;
ALTER TABLE C_ANSIBLE_LRL_EXE_INS_MNG ADD COLUMN COLLECT_LOG VARCHAR(1024) AFTER COLLECT_STATUS;
ALTER TABLE C_ANSIBLE_LRL_EXE_INS_MNG ADD COLUMN ACCESS_AUTH TEXT AFTER DISP_SEQ;

ALTER TABLE C_ANSIBLE_LRL_EXE_INS_MNG_JNL ADD COLUMN COLLECT_STATUS INT AFTER CONDUCTOR_INSTANCE_NO;
ALTER TABLE C_ANSIBLE_LRL_EXE_INS_MNG_JNL ADD COLUMN COLLECT_LOG VARCHAR(1024) AFTER COLLECT_STATUS;
ALTER TABLE C_ANSIBLE_LRL_EXE_INS_MNG_JNL ADD COLUMN ACCESS_AUTH TEXT AFTER DISP_SEQ;

ALTER TABLE B_ANSIBLE_LRL_ROLE_PACKAGE ADD COLUMN ACCESS_AUTH TEXT AFTER DISP_SEQ;

ALTER TABLE B_ANSIBLE_LRL_ROLE_PACKAGE_JNL ADD COLUMN ACCESS_AUTH TEXT AFTER DISP_SEQ;

ALTER TABLE B_ANSIBLE_LRL_ROLE ADD COLUMN ACCESS_AUTH TEXT AFTER DISP_SEQ;

ALTER TABLE B_ANSIBLE_LRL_ROLE_JNL ADD COLUMN ACCESS_AUTH TEXT AFTER DISP_SEQ;

ALTER TABLE B_ANSIBLE_LRL_ROLE_VARS ADD COLUMN ACCESS_AUTH TEXT AFTER DISP_SEQ;

ALTER TABLE B_ANSIBLE_LRL_ROLE_VARS_JNL ADD COLUMN ACCESS_AUTH TEXT AFTER DISP_SEQ;

ALTER TABLE B_ANSIBLE_LRL_PATTERN_LINK ADD COLUMN ACCESS_AUTH TEXT AFTER DISP_SEQ;

ALTER TABLE B_ANSIBLE_LRL_PATTERN_LINK_JNL ADD COLUMN ACCESS_AUTH TEXT AFTER DISP_SEQ;

ALTER TABLE B_ANSIBLE_LRL_VARS_MASTER ADD COLUMN ACCESS_AUTH TEXT AFTER DISP_SEQ;

ALTER TABLE B_ANSIBLE_LRL_VARS_MASTER_JNL ADD COLUMN ACCESS_AUTH TEXT AFTER DISP_SEQ;

ALTER TABLE B_ANSIBLE_LRL_CHILD_VARS ADD COLUMN ACCESS_AUTH TEXT AFTER DISP_SEQ;

ALTER TABLE B_ANSIBLE_LRL_CHILD_VARS_JNL ADD COLUMN ACCESS_AUTH TEXT AFTER DISP_SEQ;

ALTER TABLE B_ANS_LRL_PTN_VARS_LINK ADD COLUMN ACCESS_AUTH TEXT AFTER DISP_SEQ;

ALTER TABLE B_ANS_LRL_PTN_VARS_LINK_JNL ADD COLUMN ACCESS_AUTH TEXT AFTER DISP_SEQ;

ALTER TABLE B_ANSIBLE_LRL_VARS_ASSIGN MODIFY COLUMN VARS_ENTRY TEXT;
ALTER TABLE B_ANSIBLE_LRL_VARS_ASSIGN ADD COLUMN SENSITIVE_FLAG VARCHAR(1) AFTER VARS_ENTRY;
ALTER TABLE B_ANSIBLE_LRL_VARS_ASSIGN ADD COLUMN ACCESS_AUTH TEXT AFTER DISP_SEQ;

ALTER TABLE B_ANSIBLE_LRL_VARS_ASSIGN_JNL MODIFY COLUMN VARS_ENTRY TEXT;
ALTER TABLE B_ANSIBLE_LRL_VARS_ASSIGN_JNL ADD COLUMN SENSITIVE_FLAG VARCHAR(1) AFTER VARS_ENTRY;
ALTER TABLE B_ANSIBLE_LRL_VARS_ASSIGN_JNL ADD COLUMN ACCESS_AUTH TEXT AFTER DISP_SEQ;

ALTER TABLE B_ANSIBLE_LRL_PHO_LINK ADD COLUMN ACCESS_AUTH TEXT AFTER DISP_SEQ;

ALTER TABLE B_ANSIBLE_LRL_PHO_LINK_JNL ADD COLUMN ACCESS_AUTH TEXT AFTER DISP_SEQ;

ALTER TABLE B_ANS_LRL_ROLE_VARSVAL ADD COLUMN ACCESS_AUTH TEXT AFTER DISP_SEQ;

ALTER TABLE B_ANS_LRL_ROLE_VARSVAL_JNL ADD COLUMN ACCESS_AUTH TEXT AFTER DISP_SEQ;

ALTER TABLE B_ANS_LRL_ARRAY_MEMBER ADD COLUMN ACCESS_AUTH TEXT AFTER DISP_SEQ;

ALTER TABLE B_ANS_LRL_ARRAY_MEMBER_JNL ADD COLUMN ACCESS_AUTH TEXT AFTER DISP_SEQ;

ALTER TABLE B_ANS_LRL_MAX_MEMBER_COL ADD COLUMN ACCESS_AUTH TEXT AFTER DISP_SEQ;

ALTER TABLE B_ANS_LRL_MAX_MEMBER_COL_JNL ADD COLUMN ACCESS_AUTH TEXT AFTER DISP_SEQ;

ALTER TABLE B_ANS_LRL_MEMBER_COL_COMB ADD COLUMN ACCESS_AUTH TEXT AFTER DISP_SEQ;

ALTER TABLE B_ANS_LRL_MEMBER_COL_COMB_JNL ADD COLUMN ACCESS_AUTH TEXT AFTER DISP_SEQ;

ALTER TABLE B_ANS_LRL_RP_REP_VARS_LIST ADD COLUMN ACCESS_AUTH TEXT AFTER DISP_SEQ;

ALTER TABLE B_ANS_LRL_RP_REP_VARS_LIST_JNL ADD COLUMN ACCESS_AUTH TEXT AFTER DISP_SEQ;

CREATE OR REPLACE VIEW D_ANSIBLE_LRL_INS_STATUS     AS 
SELECT * 
FROM B_ANSIBLE_STATUS;

CREATE OR REPLACE VIEW D_ANSIBLE_LRL_INS_STATUS_JNL AS 
SELECT * 
FROM B_ANSIBLE_STATUS_JNL;

CREATE OR REPLACE VIEW D_ANSIBLE_LRL_INS_RUN_MODE     AS 
SELECT * 
FROM B_ANSIBLE_RUN_MODE;

CREATE OR REPLACE VIEW D_ANSIBLE_LRL_INS_RUN_MODE_JNL AS 
SELECT * 
FROM B_ANSIBLE_RUN_MODE_JNL;

CREATE OR REPLACE VIEW E_ANSIBLE_LRL_PATTERN AS 
SELECT 
        PATTERN_ID                    ,
        PATTERN_NAME                  ,
        CONCAT(PATTERN_ID,':',PATTERN_NAME) PATTERN,
        ITA_EXT_STM_ID                ,
        TIME_LIMIT                    ,
        ANS_HOST_DESIGNATE_TYPE_ID    ,
        ANS_PARALLEL_EXE              ,
        ANS_WINRM_ID                  ,
        ANS_PLAYBOOK_HED_DEF          ,
        ANS_EXEC_OPTIONS              ,
        ANS_VIRTUALENV_NAME           ,
        (SELECT 
           COUNT(*) 
         FROM 
           B_ANS_LRL_PTN_VARS_LINK TBL_S
         WHERE
           TBL_S.PATTERN_ID = TAB_A.PATTERN_ID AND
           DISUSE_FLAG = '0'
        ) VARS_COUNT                  ,
        DISP_SEQ                      ,
        ACCESS_AUTH                   ,
        NOTE                          ,
        DISUSE_FLAG                   ,
        LAST_UPDATE_TIMESTAMP         ,
        LAST_UPDATE_USER
FROM C_PATTERN_PER_ORCH TAB_A
WHERE TAB_A.ITA_EXT_STM_ID = 5;

CREATE OR REPLACE VIEW E_ANSIBLE_LRL_PATTERN_JNL AS 
SELECT 
        JOURNAL_SEQ_NO                ,
        JOURNAL_REG_DATETIME          ,
        JOURNAL_ACTION_CLASS          ,
        PATTERN_ID                    ,
        PATTERN_NAME                  ,
        CONCAT(PATTERN_ID,':',PATTERN_NAME) PATTERN,
        ITA_EXT_STM_ID                ,
        TIME_LIMIT                    ,
        ANS_HOST_DESIGNATE_TYPE_ID    ,
        ANS_PARALLEL_EXE              ,
        ANS_WINRM_ID                  ,
        ANS_PLAYBOOK_HED_DEF          ,
        ANS_EXEC_OPTIONS              ,
        ANS_VIRTUALENV_NAME           ,
        (SELECT 
           COUNT(*) 
         FROM 
           B_ANS_LRL_PTN_VARS_LINK_JNL TBL_S
         WHERE
           TBL_S.PATTERN_ID = TAB_A.PATTERN_ID AND
           DISUSE_FLAG = '0'
        ) VARS_COUNT                  ,
        DISP_SEQ                      ,
        ACCESS_AUTH                   ,
        NOTE                          ,
        DISUSE_FLAG                   ,
        LAST_UPDATE_TIMESTAMP         ,
        LAST_UPDATE_USER
FROM C_PATTERN_PER_ORCH_JNL TAB_A
WHERE TAB_A.ITA_EXT_STM_ID = 5;

CREATE OR REPLACE VIEW E_ANSIBLE_LRL_EXE_INS_MNG AS
SELECT 
         TAB_A.EXECUTION_NO              ,
         TAB_A.EXECUTION_USER            ,
         TAB_A.SYMPHONY_NAME             ,
         TAB_A.STATUS_ID                 ,
         TAB_C.STATUS_NAME               ,
         TAB_A.SYMPHONY_INSTANCE_NO      ,
         TAB_A.PATTERN_ID                ,
         TAB_A.I_PATTERN_NAME            ,
         TAB_A.I_TIME_LIMIT              ,
         TAB_A.I_ANS_HOST_DESIGNATE_TYPE_ID ,
         TAB_E.HOST_DESIGNATE_TYPE_NAME    ANS_HOST_DESIGNATE_TYPE_NAME,
         TAB_A.I_ANS_PARALLEL_EXE        ,
         TAB_A.I_ANS_WINRM_ID            ,
         TAB_A.I_ANS_PLAYBOOK_HED_DEF    ,
         TAB_A.I_ANS_EXEC_OPTIONS        ,
         TAB_F.FLAG_NAME                   ANS_WINRM_FLAG_NAME,
         TAB_A.OPERATION_NO_UAPK         ,
         TAB_A.I_OPERATION_NAME          ,
         TAB_A.I_OPERATION_NO_IDBH       ,
         TAB_A.I_VIRTUALENV_NAME         ,
         TAB_A.TIME_BOOK                 ,
         TAB_A.TIME_START                ,
         TAB_A.TIME_END                  ,
         TAB_A.FILE_INPUT                ,
         TAB_A.FILE_RESULT               ,
         TAB_A.RUN_MODE                  ,
         TAB_D.RUN_MODE_NAME             ,
         TAB_A.EXEC_MODE                 ,
         TAB_G.NAME AS EXEC_MODE_NAME    ,
         TAB_A.MULTIPLELOG_MODE          ,
         TAB_A.LOGFILELIST_JSON          ,
         TAB_A.CONDUCTOR_NAME            ,
         TAB_A.CONDUCTOR_INSTANCE_NO     ,
         TAB_A.DISP_SEQ                  ,
         TAB_A.ACCESS_AUTH               ,
         TAB_A.NOTE                      ,
         TAB_A.DISUSE_FLAG               ,
         TAB_A.LAST_UPDATE_TIMESTAMP     ,
         TAB_A.LAST_UPDATE_USER
FROM C_ANSIBLE_LRL_EXE_INS_MNG       TAB_A
LEFT JOIN E_ANSIBLE_LRL_PATTERN      TAB_B ON ( TAB_B.PATTERN_ID = TAB_A.PATTERN_ID )
LEFT JOIN D_ANSIBLE_LRL_INS_STATUS   TAB_C ON ( TAB_A.STATUS_ID = TAB_C.STATUS_ID )
LEFT JOIN D_ANSIBLE_LRL_INS_RUN_MODE TAB_D ON ( TAB_A.RUN_MODE = TAB_D.RUN_MODE_ID )
LEFT JOIN B_HOST_DESIGNATE_TYPE_LIST TAB_E ON ( TAB_A.I_ANS_HOST_DESIGNATE_TYPE_ID = TAB_E.HOST_DESIGNATE_TYPE_ID )
LEFT JOIN D_FLAG_LIST_01             TAB_F ON ( TAB_A.I_ANS_WINRM_ID = TAB_F.FLAG_ID )
LEFT JOIN B_ANSIBLE_EXEC_MODE        TAB_G ON ( TAB_A.EXEC_MODE = TAB_G.ID )
;

CREATE OR REPLACE VIEW E_ANSIBLE_LRL_EXE_INS_MNG_JNL AS 
SELECT 
         TAB_A.JOURNAL_SEQ_NO            ,
         TAB_A.JOURNAL_REG_DATETIME      ,
         TAB_A.JOURNAL_ACTION_CLASS      ,
         TAB_A.EXECUTION_NO              ,
         TAB_A.SYMPHONY_NAME             ,
         TAB_A.EXECUTION_USER            ,
         TAB_A.STATUS_ID                 ,
         TAB_C.STATUS_NAME               ,
         TAB_A.SYMPHONY_INSTANCE_NO      ,
         TAB_A.PATTERN_ID                ,
         TAB_A.I_PATTERN_NAME            ,
         TAB_A.I_TIME_LIMIT              ,
         TAB_A.I_ANS_HOST_DESIGNATE_TYPE_ID ,
         TAB_E.HOST_DESIGNATE_TYPE_NAME    ANS_HOST_DESIGNATE_TYPE_NAME,
         TAB_A.I_ANS_PARALLEL_EXE        ,
         TAB_A.I_ANS_WINRM_ID            ,
         TAB_A.I_ANS_PLAYBOOK_HED_DEF    ,
         TAB_A.I_ANS_EXEC_OPTIONS        ,
         TAB_F.FLAG_NAME                   ANS_WINRM_FLAG_NAME,
         TAB_A.OPERATION_NO_UAPK         ,
         TAB_A.I_OPERATION_NAME          ,
         TAB_A.I_OPERATION_NO_IDBH       ,
         TAB_A.I_VIRTUALENV_NAME         ,
         TAB_A.TIME_BOOK                 ,
         TAB_A.TIME_START                ,
         TAB_A.TIME_END                  ,
         TAB_A.FILE_INPUT                ,
         TAB_A.FILE_RESULT               ,
         TAB_A.RUN_MODE                  ,
         TAB_D.RUN_MODE_NAME             ,
         TAB_A.EXEC_MODE                 ,
         TAB_G.NAME AS EXEC_MODE_NAME    ,
         TAB_A.MULTIPLELOG_MODE          ,
         TAB_A.LOGFILELIST_JSON          ,
         TAB_A.CONDUCTOR_NAME            ,
         TAB_A.CONDUCTOR_INSTANCE_NO     ,
         TAB_A.DISP_SEQ                  ,
         TAB_A.ACCESS_AUTH               ,
         TAB_A.NOTE                      ,
         TAB_A.DISUSE_FLAG               ,
         TAB_A.LAST_UPDATE_TIMESTAMP     ,
         TAB_A.LAST_UPDATE_USER           
FROM C_ANSIBLE_LRL_EXE_INS_MNG_JNL TAB_A
LEFT JOIN E_ANSIBLE_LRL_PATTERN      TAB_B ON ( TAB_B.PATTERN_ID = TAB_A.PATTERN_ID )
LEFT JOIN D_ANSIBLE_LRL_INS_STATUS   TAB_C ON ( TAB_A.STATUS_ID = TAB_C.STATUS_ID )
LEFT JOIN D_ANSIBLE_LRL_INS_RUN_MODE TAB_D ON ( TAB_A.RUN_MODE = TAB_D.RUN_MODE_ID )
LEFT JOIN B_HOST_DESIGNATE_TYPE_LIST TAB_E ON ( TAB_A.I_ANS_HOST_DESIGNATE_TYPE_ID = TAB_E.HOST_DESIGNATE_TYPE_ID )
LEFT JOIN D_FLAG_LIST_01             TAB_F ON ( TAB_A.I_ANS_WINRM_ID = TAB_F.FLAG_ID )
LEFT JOIN B_ANSIBLE_EXEC_MODE        TAB_G ON ( TAB_A.EXEC_MODE = TAB_G.ID )
;

CREATE OR REPLACE VIEW D_ANSIBLE_LRL_ROLE_LIST AS 
SELECT 
        TAB_A.ROLE_ID                 ,
        TAB_A.ROLE_NAME               ,
        TAB_A.ROLE_PACKAGE_ID         ,
        TAB_B.ROLE_PACKAGE_NAME       ,
        TAB_B.ROLE_PACKAGE_FILE       ,
        CONCAT(TAB_B.ROLE_PACKAGE_ID,':',TAB_B.ROLE_PACKAGE_NAME) ROLE_PACKAGE_NAME_PULLDOWN,
        CONCAT(TAB_A.ROLE_ID,':',TAB_A.ROLE_NAME) ROLE_NAME_PULLDOWN,
        TAB_A.DISP_SEQ                ,
        TAB_B.ACCESS_AUTH             ,
        TAB_A.NOTE                    ,
        TAB_B.DISUSE_FLAG             ,
        TAB_A.DISUSE_FLAG   AS PACKAGE_DISUSE_FLAG ,
        TAB_B.DISUSE_FLAG   AS ROLE_DISUSE_FLAG    ,
        TAB_A.LAST_UPDATE_TIMESTAMP   ,
        TAB_A.LAST_UPDATE_USER
FROM B_ANSIBLE_LRL_ROLE     TAB_A
LEFT JOIN B_ANSIBLE_LRL_ROLE_PACKAGE TAB_B ON ( TAB_A.ROLE_PACKAGE_ID = TAB_B.ROLE_PACKAGE_ID )
;

CREATE OR REPLACE VIEW D_ANSIBLE_LRL_ROLE_LIST_JNL AS 
SELECT 
        TAB_A.ROLE_ID                 ,
        TAB_A.ROLE_NAME               ,
        TAB_A.ROLE_PACKAGE_ID         ,
        TAB_B.ROLE_PACKAGE_NAME       ,
        TAB_B.ROLE_PACKAGE_FILE       ,
        CONCAT(TAB_B.ROLE_PACKAGE_ID,':',TAB_B.ROLE_PACKAGE_NAME) ROLE_PACKAGE_NAME_PULLDOWN,
        CONCAT(TAB_A.ROLE_ID,':',TAB_A.ROLE_NAME) ROLE_NAME_PULLDOWN,
        TAB_A.DISP_SEQ                ,
        TAB_B.ACCESS_AUTH             ,
        TAB_A.NOTE                    ,
        TAB_B.DISUSE_FLAG             ,
        TAB_A.DISUSE_FLAG   AS PACKAGE_DISUSE_FLAG ,
        TAB_B.DISUSE_FLAG   AS ROLE_DISUSE_FLAG    ,
        TAB_A.LAST_UPDATE_TIMESTAMP   ,
        TAB_A.LAST_UPDATE_USER
FROM B_ANSIBLE_LRL_ROLE_JNL TAB_A
LEFT JOIN B_ANSIBLE_LRL_ROLE_PACKAGE TAB_B ON ( TAB_A.ROLE_PACKAGE_ID = TAB_B.ROLE_PACKAGE_ID )
;

CREATE OR REPLACE VIEW D_ANS_LRL_PTN_VARS_LINK_VFP AS 
SELECT 
        TAB_A.VARS_LINK_ID            ,
        TAB_A.PATTERN_ID              ,
        TAB_B.PATTERN_NAME            ,
        TAB_A.VARS_NAME_ID            ,
        TAB_C.VARS_NAME               ,
        TAB_C.VARS_ATTRIBUTE_01       ,
        CONCAT(TAB_A.VARS_LINK_ID,':',TAB_C.VARS_NAME) VARS_LINK_PULLDOWN,
        TAB_A.DISP_SEQ                ,
        TAB_A.ACCESS_AUTH             ,
        TAB_A.NOTE                    ,
        TAB_A.DISUSE_FLAG             ,
        TAB_A.LAST_UPDATE_TIMESTAMP   ,
        TAB_A.LAST_UPDATE_USER
FROM B_ANS_LRL_PTN_VARS_LINK     TAB_A
LEFT JOIN E_ANSIBLE_LRL_PATTERN      TAB_B ON ( TAB_A.PATTERN_ID = TAB_B.PATTERN_ID )
LEFT JOIN B_ANSIBLE_LRL_VARS_MASTER  TAB_C ON ( TAB_A.VARS_NAME_ID = TAB_C.VARS_NAME_ID )
WHERE TAB_A.DISUSE_FLAG = '0'
AND TAB_B.DISUSE_FLAG = '0'
AND TAB_C.DISUSE_FLAG = '0'
;

CREATE OR REPLACE VIEW D_ANS_LRL_PTN_VARS_LINK AS 
SELECT 
        TAB_A.VARS_LINK_ID            ,
        TAB_A.PATTERN_ID              ,
        TAB_B.PATTERN_NAME            ,
        TAB_A.VARS_NAME_ID            ,
        TAB_C.VARS_NAME               ,
        TAB_C.VARS_ATTRIBUTE_01       ,
        CONCAT(TAB_A.VARS_LINK_ID,':',TAB_C.VARS_NAME) VARS_LINK_PULLDOWN,
        TAB_A.DISP_SEQ                ,
        TAB_A.ACCESS_AUTH             ,
        TAB_A.NOTE                    ,
        TAB_A.DISUSE_FLAG             ,
        TAB_A.LAST_UPDATE_TIMESTAMP   ,
        TAB_A.LAST_UPDATE_USER
FROM B_ANS_LRL_PTN_VARS_LINK     TAB_A
LEFT JOIN E_ANSIBLE_LRL_PATTERN      TAB_B ON ( TAB_A.PATTERN_ID = TAB_B.PATTERN_ID )
LEFT JOIN B_ANSIBLE_LRL_VARS_MASTER  TAB_C ON ( TAB_A.VARS_NAME_ID = TAB_C.VARS_NAME_ID )
;

CREATE OR REPLACE VIEW D_ANS_LRL_PTN_VARS_LINK_JNL AS 
SELECT 
        JOURNAL_SEQ_NO                ,
        JOURNAL_REG_DATETIME          ,
        JOURNAL_ACTION_CLASS          ,
        TAB_A.VARS_LINK_ID            ,
        TAB_A.PATTERN_ID              ,
        TAB_B.PATTERN_NAME            ,
        TAB_A.VARS_NAME_ID            ,
        TAB_C.VARS_NAME               ,
        TAB_C.VARS_ATTRIBUTE_01       ,
        CONCAT(TAB_A.VARS_LINK_ID,':',TAB_C.VARS_NAME) VARS_LINK_PULLDOWN,
        TAB_A.DISP_SEQ                ,
        TAB_A.ACCESS_AUTH             ,
        TAB_A.NOTE                    ,
        TAB_A.DISUSE_FLAG             ,
        TAB_A.LAST_UPDATE_TIMESTAMP   ,
        TAB_A.LAST_UPDATE_USER
FROM B_ANS_LRL_PTN_VARS_LINK_JNL TAB_A
LEFT JOIN E_ANSIBLE_LRL_PATTERN      TAB_B ON ( TAB_A.PATTERN_ID = TAB_B.PATTERN_ID )
LEFT JOIN B_ANSIBLE_LRL_VARS_MASTER  TAB_C ON ( TAB_A.VARS_NAME_ID = TAB_C.VARS_NAME_ID )
;

CREATE OR REPLACE VIEW D_ANS_LRL_CHILD_VARS_VFP AS 
SELECT 
        TAB_A.CHILD_VARS_NAME_ID      ,
        TAB_A.CHILD_VARS_NAME         ,
        TAB_A.PARENT_VARS_NAME_ID     ,
        TAB_A.ARRAY_MEMBER_ID         ,
        TAB_A.ASSIGN_SEQ_NEED         ,
        TAB_A.COL_SEQ_NEED            ,
        TAB_B.VARS_NAME               ,
        TAB_B.VARS_ATTRIBUTE_01       ,
        TAB_C.VARS_LINK_ID            ,
        CONCAT(TAB_A.CHILD_VARS_NAME_ID,':',TAB_A.CHILD_VARS_NAME) CHILD_VARS_PULLDOWN,
        TAB_A.DISP_SEQ                ,
        TAB_A.ACCESS_AUTH             ,
        TAB_A.NOTE                    ,
        TAB_A.DISUSE_FLAG             ,
        TAB_A.LAST_UPDATE_TIMESTAMP   ,
        TAB_A.LAST_UPDATE_USER
FROM B_ANSIBLE_LRL_CHILD_VARS         TAB_A
LEFT JOIN B_ANSIBLE_LRL_VARS_MASTER   TAB_B ON ( TAB_A.PARENT_VARS_NAME_ID = TAB_B.VARS_NAME_ID )
LEFT JOIN B_ANS_LRL_PTN_VARS_LINK TAB_C ON ( TAB_B.VARS_NAME_ID = TAB_C.VARS_NAME_ID)
WHERE TAB_B.VARS_ATTRIBUTE_01 IN (3)
AND TAB_A.DISUSE_FLAG = '0'
AND TAB_B.DISUSE_FLAG = '0'
AND TAB_C.DISUSE_FLAG = '0'
;

CREATE OR REPLACE VIEW D_ANS_LRL_CHILD_VARS AS 
SELECT 
        TAB_A.CHILD_VARS_NAME_ID      ,
        TAB_A.CHILD_VARS_NAME         ,
        TAB_A.PARENT_VARS_NAME_ID     ,
        TAB_B.VARS_NAME               ,
        TAB_B.VARS_ATTRIBUTE_01       ,
        TAB_C.VARS_LINK_ID            ,
        CONCAT(TAB_A.CHILD_VARS_NAME_ID,':',TAB_A.CHILD_VARS_NAME) CHILD_VARS_PULLDOWN,
        TAB_A.DISP_SEQ                ,
        TAB_A.ACCESS_AUTH             ,
        TAB_A.NOTE                    ,
        TAB_A.DISUSE_FLAG             ,
        TAB_A.LAST_UPDATE_TIMESTAMP   ,
        TAB_A.LAST_UPDATE_USER
FROM B_ANSIBLE_LRL_CHILD_VARS         TAB_A
LEFT JOIN B_ANSIBLE_LRL_VARS_MASTER   TAB_B ON ( TAB_A.PARENT_VARS_NAME_ID = TAB_B.VARS_NAME_ID )
LEFT JOIN B_ANS_LRL_PTN_VARS_LINK TAB_C ON ( TAB_B.VARS_NAME_ID = TAB_C.VARS_NAME_ID)
WHERE TAB_B.VARS_ATTRIBUTE_01 IN (3)
;

CREATE OR REPLACE VIEW D_ANS_LRL_CHILD_VARS_JNL AS 
SELECT 
        JOURNAL_SEQ_NO                ,
        JOURNAL_REG_DATETIME          ,
        JOURNAL_ACTION_CLASS          ,
        TAB_A.CHILD_VARS_NAME_ID      ,
        TAB_A.CHILD_VARS_NAME         ,
        TAB_A.PARENT_VARS_NAME_ID     ,
        TAB_B.VARS_NAME               ,
        TAB_B.VARS_ATTRIBUTE_01       ,
        TAB_C.VARS_LINK_ID            ,
        CONCAT(TAB_A.CHILD_VARS_NAME_ID,':',TAB_A.CHILD_VARS_NAME) CHILD_VARS_PULLDOWN,
        TAB_A.DISP_SEQ                ,
        TAB_A.ACCESS_AUTH             ,
        TAB_A.NOTE                    ,
        TAB_A.DISUSE_FLAG             ,
        TAB_A.LAST_UPDATE_TIMESTAMP   ,
        TAB_A.LAST_UPDATE_USER
FROM B_ANSIBLE_LRL_CHILD_VARS_JNL     TAB_A
LEFT JOIN B_ANSIBLE_LRL_VARS_MASTER   TAB_B ON ( TAB_A.PARENT_VARS_NAME_ID = TAB_B.VARS_NAME_ID )
LEFT JOIN B_ANS_LRL_PTN_VARS_LINK TAB_C ON ( TAB_B.VARS_NAME_ID = TAB_C.VARS_NAME_ID)
WHERE TAB_B.VARS_ATTRIBUTE_01 IN (3)
;

CREATE OR REPLACE VIEW E_OPE_FOR_PULLDOWN_LRL
AS 
SELECT TAB_A.OPERATION_NO_UAPK    ,
       TAB_A.OPERATION_NAME       ,
       TAB_A.OPERATION_DATE       ,
       TAB_A.OPERATION_NO_IDBH    ,
       TAB_A.OPERATION            ,
       TAB_A.DISP_SEQ             ,
       TAB_A.ACCESS_AUTH          ,
       TAB_A.NOTE                 ,
       TAB_A.DISUSE_FLAG          ,
       TAB_A.LAST_UPDATE_TIMESTAMP,
       TAB_A.LAST_UPDATE_USER     ,
       TAB_B.PHO_LINK_ID          ,
       TAB_B.DISUSE_FLAG           DISUSE_FLAG_2
FROM 
    E_OPERATION_LIST TAB_A
    LEFT JOIN B_ANSIBLE_LRL_PHO_LINK TAB_B ON (TAB_A.OPERATION_NO_UAPK = TAB_B.OPERATION_NO_UAPK)
WHERE
    TAB_A.DISUSE_FLAG IN ('0') 
    AND
    TAB_B.PHO_LINK_ID IS NOT NULL 
    AND 
    TAB_B.DISUSE_FLAG IN ('0')
;

CREATE OR REPLACE VIEW D_ANS_LRL_ARRAY_MEMBER AS
SELECT
    ARRAY_MEMBER_ID                 ,
    
    VARS_NAME_ID                    ,
    PARENT_VARS_KEY_ID              ,
    VARS_KEY_ID                     ,
    VARS_NAME                       ,
    ARRAY_NEST_LEVEL                ,
    ASSIGN_SEQ_NEED                 ,
    COL_SEQ_NEED                    ,
    MEMBER_DISP                     ,
    MAX_COL_SEQ                     ,
    VRAS_NAME_PATH                  ,
    VRAS_NAME_ALIAS                 ,
    CASE VRAS_NAME_ALIAS
        WHEN '0' THEN '-'
        ELSE VRAS_NAME_ALIAS
    END VRAS_NAME                   ,
    
    DISP_SEQ                        ,
    ACCESS_AUTH                     ,
    NOTE                            ,
    DISUSE_FLAG                     ,
    LAST_UPDATE_TIMESTAMP           ,
    LAST_UPDATE_USER                
FROM
    B_ANS_LRL_ARRAY_MEMBER
;

CREATE OR REPLACE VIEW D_ANS_LRL_ARRAY_MEMBER_JNL AS
SELECT
    JOURNAL_SEQ_NO                  ,
    JOURNAL_REG_DATETIME            ,
    JOURNAL_ACTION_CLASS            ,
    
    ARRAY_MEMBER_ID                 ,
    
    VARS_NAME_ID                    ,
    PARENT_VARS_KEY_ID              ,
    VARS_KEY_ID                     ,
    VARS_NAME                       ,
    ARRAY_NEST_LEVEL                ,
    ASSIGN_SEQ_NEED                 ,
    COL_SEQ_NEED                    ,
    MEMBER_DISP                     ,
    MAX_COL_SEQ                     ,
    VRAS_NAME_PATH                  ,
    VRAS_NAME_ALIAS                 ,
    CASE VRAS_NAME_ALIAS
        WHEN '0' THEN '-'
        ELSE VRAS_NAME_ALIAS
    END VRAS_NAME                   ,
    
    DISP_SEQ                        ,
    ACCESS_AUTH                     ,
    NOTE                            ,
    DISUSE_FLAG                     ,
    LAST_UPDATE_TIMESTAMP           ,
    LAST_UPDATE_USER                
FROM
    B_ANS_LRL_ARRAY_MEMBER_JNL
;

CREATE OR REPLACE VIEW D_ANS_LRL_MEMBER_COL_COMB AS
SELECT
    COL_SEQ_COMBINATION_ID          ,
    
    VARS_NAME_ID                    ,
    ARRAY_MEMBER_ID                 ,
    COL_COMBINATION_MEMBER_ALIAS    ,
    COL_SEQ_VALUE                   ,
    CONCAT(COL_SEQ_COMBINATION_ID,':',COL_COMBINATION_MEMBER_ALIAS) COMBINATION_MEMBER,
    
    DISP_SEQ                        ,
    ACCESS_AUTH                     ,
    NOTE                            ,
    DISUSE_FLAG                     ,
    LAST_UPDATE_TIMESTAMP           ,
    LAST_UPDATE_USER                
FROM
    B_ANS_LRL_MEMBER_COL_COMB
;

CREATE OR REPLACE VIEW D_ANS_LRL_MEMBER_COL_COMB_JNL AS
SELECT
    JOURNAL_SEQ_NO                  ,
    JOURNAL_REG_DATETIME            ,
    JOURNAL_ACTION_CLASS            ,
    
    COL_SEQ_COMBINATION_ID          ,
    
    VARS_NAME_ID                    ,
    ARRAY_MEMBER_ID                 ,
    COL_COMBINATION_MEMBER_ALIAS    ,
    COL_SEQ_VALUE                   ,
    CONCAT(COL_SEQ_COMBINATION_ID,':',COL_COMBINATION_MEMBER_ALIAS) COMBINATION_MEMBER,
    
    DISP_SEQ                        ,
    ACCESS_AUTH                     ,
    NOTE                            ,
    DISUSE_FLAG                     ,
    LAST_UPDATE_TIMESTAMP           ,
    LAST_UPDATE_USER                
FROM
    B_ANS_LRL_MEMBER_COL_COMB_JNL
;

ALTER TABLE B_ANS_LNS_VAL_ASSIGN ADD COLUMN ACCESS_AUTH TEXT AFTER DISP_SEQ;

ALTER TABLE B_ANS_LNS_VAL_ASSIGN_JNL ADD COLUMN ACCESS_AUTH TEXT AFTER DISP_SEQ;

ALTER TABLE B_ANS_LRL_VAL_ASSIGN ADD COLUMN ACCESS_AUTH TEXT AFTER DISP_SEQ;

ALTER TABLE B_ANS_LRL_VAL_ASSIGN_JNL ADD COLUMN ACCESS_AUTH TEXT AFTER DISP_SEQ;

ALTER TABLE B_ANS_PNS_VAL_ASSIGN ADD COLUMN ACCESS_AUTH TEXT AFTER DISP_SEQ;

ALTER TABLE B_ANS_PNS_VAL_ASSIGN_JNL ADD COLUMN ACCESS_AUTH TEXT AFTER DISP_SEQ;

CREATE OR REPLACE VIEW D_ANS_LNS_VAL_ASSIGN AS 
SELECT 
       TAB_A.COLUMN_ID                      , -- 識別シーケンス
       TAB_A.MENU_ID                        , -- メニューID
       TAB_A.COLUMN_LIST_ID                 , -- CMDB処理対象メニューカラム一覧の識別シーケンス
       TAB_A.COL_TYPE                       , -- カラムタイプ　1/空白:Value型　2:Key-Value型　
       TAB_A.PATTERN_ID                     , -- 作業パターンID
       TAB_A.VAL_VARS_LINK_ID               , -- Value値　作業パターン変数紐付
       TAB_A.VAL_CHILD_VARS_LINK_ID         , -- Value値　作業パターンメンバー変数紐付
       TAB_A.VAL_ASSIGN_SEQ                 , -- Value値　代入順序
       TAB_A.VAL_CHILD_VARS_COL_SEQ         , -- Value値　列順序
       TAB_A.KEY_VARS_LINK_ID               , -- Key値　作業パターン変数紐付
       TAB_A.KEY_CHILD_VARS_LINK_ID         , -- Key値　作業パターンメンバー変数紐付
       TAB_A.KEY_ASSIGN_SEQ                 , -- Key値　代入順序
       TAB_A.KEY_CHILD_VARS_COL_SEQ         , -- Key値　列順序
       TAB_A.NULL_DATA_HANDLING_FLG         , -- Null値の連携
       TAB_B.MENU_GROUP_ID                  ,
       TAB_C.MENU_GROUP_NAME                ,
       TAB_A.MENU_ID           MENU_ID_CLONE,
       TAB_B.MENU_NAME                      ,
       TAB_A.COLUMN_LIST_ID    REST_COLUMN_LIST_ID,      -- REST/EXCEL/CSV用　CMDB処理対象メニューグループ+メニュー+カラム一覧の識別シーケンス
       TAB_A.VAL_VARS_LINK_ID  REST_VAL_VARS_LINK_ID,    -- REST/EXCEL/CSV用　Value値　作業パターン+変数名(作業パターン変数紐付)
       TAB_A.KEY_VARS_LINK_ID  REST_KEY_VARS_LINK_ID,    -- REST/EXCEL/CSV用　Key値　作業パターン+変数名(作業パターン変数紐付)
       TAB_A.DISP_SEQ                       ,
       TAB_A.ACCESS_AUTH                    ,
       TAB_A.NOTE                           ,
       TAB_A.DISUSE_FLAG                    ,
       TAB_A.LAST_UPDATE_TIMESTAMP          ,
       TAB_A.LAST_UPDATE_USER 
FROM B_ANS_LNS_VAL_ASSIGN TAB_A
LEFT JOIN A_MENU_LIST TAB_B ON (TAB_A.MENU_ID = TAB_B.MENU_ID)
LEFT JOIN A_MENU_GROUP_LIST TAB_C ON (TAB_B.MENU_GROUP_ID = TAB_C.MENU_GROUP_ID);

CREATE OR REPLACE VIEW D_ANS_LNS_VAL_ASSIGN_JNL AS 
SELECT TAB_A.JOURNAL_SEQ_NO                 ,
       TAB_A.JOURNAL_REG_DATETIME           ,
       TAB_A.JOURNAL_ACTION_CLASS           ,
       TAB_A.COLUMN_ID                      , -- 識別シーケンス
       TAB_A.MENU_ID                        , -- メニューID
       TAB_A.COLUMN_LIST_ID                 , -- CMDB処理対象メニューカラム一覧の識別シーケンス
       TAB_A.COL_TYPE                       , -- カラムタイプ　1/空白:Value型　2:Key-Value型　
       TAB_A.PATTERN_ID                     , -- 作業パターンID
       TAB_A.VAL_VARS_LINK_ID               , -- Value値　作業パターン変数紐付
       TAB_A.VAL_CHILD_VARS_LINK_ID         , -- Value値　作業パターンメンバー変数紐付
       TAB_A.VAL_ASSIGN_SEQ                 , -- Value値　代入順序
       TAB_A.VAL_CHILD_VARS_COL_SEQ         , -- Value値　列順序
       TAB_A.KEY_VARS_LINK_ID               , -- Key値　作業パターン変数紐付
       TAB_A.KEY_CHILD_VARS_LINK_ID         , -- Key値　作業パターンメンバー変数紐付
       TAB_A.KEY_ASSIGN_SEQ                 , -- Key値　代入順序
       TAB_A.KEY_CHILD_VARS_COL_SEQ         , -- Key値　列順序
       TAB_A.NULL_DATA_HANDLING_FLG         , -- Null値の連携
       TAB_B.MENU_GROUP_ID                  ,
       TAB_C.MENU_GROUP_NAME                ,
       TAB_A.MENU_ID           MENU_ID_CLONE,
       TAB_B.MENU_NAME                      ,
       TAB_A.COLUMN_LIST_ID    REST_COLUMN_LIST_ID,      -- REST/EXCEL/CSV用　CMDB処理対象メニューグループ+メニュー+カラム一覧の識別シーケンス
       TAB_A.VAL_VARS_LINK_ID  REST_VAL_VARS_LINK_ID,    -- REST/EXCEL/CSV用　Value値　作業パターン+変数名(作業パターン変数紐付)
       TAB_A.KEY_VARS_LINK_ID  REST_KEY_VARS_LINK_ID,    -- REST/EXCEL/CSV用　Key値　作業パターン+変数名(作業パターン変数紐付)
       TAB_A.DISP_SEQ                       ,
       TAB_A.ACCESS_AUTH                    ,
       TAB_A.NOTE                           ,
       TAB_A.DISUSE_FLAG                    ,
       TAB_A.LAST_UPDATE_TIMESTAMP          ,
       TAB_A.LAST_UPDATE_USER 
FROM B_ANS_LNS_VAL_ASSIGN_JNL TAB_A
LEFT JOIN A_MENU_LIST TAB_B ON (TAB_A.MENU_ID = TAB_B.MENU_ID)
LEFT JOIN A_MENU_GROUP_LIST TAB_C ON (TAB_B.MENU_GROUP_ID = TAB_C.MENU_GROUP_ID);

CREATE OR REPLACE VIEW D_ANS_LRL_VAL_ASSIGN AS 
SELECT 
       TAB_A.COLUMN_ID                      , -- 識別シーケンス
       TAB_A.MENU_ID                        , -- メニューID
       TAB_A.COLUMN_LIST_ID                 , -- CMDB処理対象メニューカラム一覧の識別シーケンス
       TAB_A.COL_TYPE                       , -- カラムタイプ　1/空白:Value型　2:Key-Value型　
       TAB_A.PATTERN_ID                     , -- 作業パターンID
       TAB_A.VAL_VARS_LINK_ID               , -- Value値　作業パターン変数紐付
       TAB_A.VAL_COL_SEQ_COMBINATION_ID     , -- 多次元変数配列組合せ管理 Pkey
       TAB_A.VAL_ASSIGN_SEQ                 , -- Value値　代入順序
       TAB_A.KEY_VARS_LINK_ID               , -- Key値　作業パターン変数紐付
       TAB_A.KEY_COL_SEQ_COMBINATION_ID     , -- 多次元変数配列組合せ管理 Pkey
       TAB_A.KEY_ASSIGN_SEQ                 , -- Key値　代入順序
       TAB_A.NULL_DATA_HANDLING_FLG         , -- Null値の連携
       TAB_B.MENU_GROUP_ID                  ,
       TAB_C.MENU_GROUP_NAME                ,
       TAB_A.MENU_ID           MENU_ID_CLONE,
       TAB_B.MENU_NAME                      ,
       TAB_A.COLUMN_LIST_ID             REST_COLUMN_LIST_ID,             -- REST/EXCEL/CSV用　CMDB処理対象メニューグループ+メニュー+カラム一覧の識別シーケンス
       TAB_A.VAL_VARS_LINK_ID           REST_VAL_VARS_LINK_ID,           -- REST/EXCEL/CSV用　Value値　作業パターン+変数名(作業パターン変数紐付)
       TAB_A.VAL_COL_SEQ_COMBINATION_ID REST_VAL_COL_SEQ_COMBINATION_ID, -- REST/EXCEL/CSV用　Value値　多次元変数配列組合せ管理 Pkey
       TAB_A.KEY_VARS_LINK_ID           REST_KEY_VARS_LINK_ID,           -- REST/EXCEL/CSV用　Key値　作業パターン+変数名(作業パターン変数紐付)
       TAB_A.KEY_COL_SEQ_COMBINATION_ID REST_KEY_COL_SEQ_COMBINATION_ID, -- REST/EXCEL/CSV用　Key値　多次元変数配列組合せ管理 Pkey
       TAB_A.DISP_SEQ                       ,
       TAB_A.ACCESS_AUTH                    ,
       TAB_A.NOTE                           ,
       TAB_A.DISUSE_FLAG                    ,
       TAB_A.LAST_UPDATE_TIMESTAMP          ,
       TAB_A.LAST_UPDATE_USER 
FROM B_ANS_LRL_VAL_ASSIGN TAB_A
LEFT JOIN A_MENU_LIST TAB_B ON (TAB_A.MENU_ID = TAB_B.MENU_ID)
LEFT JOIN A_MENU_GROUP_LIST TAB_C ON (TAB_B.MENU_GROUP_ID = TAB_C.MENU_GROUP_ID);

CREATE OR REPLACE VIEW D_ANS_LRL_VAL_ASSIGN_JNL AS 
SELECT TAB_A.JOURNAL_SEQ_NO                 ,
       TAB_A.JOURNAL_REG_DATETIME           ,
       TAB_A.JOURNAL_ACTION_CLASS           ,
       TAB_A.COLUMN_ID                      , -- 識別シーケンス
       TAB_A.MENU_ID                        , -- メニューID
       TAB_A.COLUMN_LIST_ID                 , -- CMDB処理対象メニューカラム一覧の識別シーケンス
       TAB_A.COL_TYPE                       , -- カラムタイプ　1/空白:Value型　2:Key-Value型　
       TAB_A.PATTERN_ID                     , -- 作業パターンID
       TAB_A.VAL_VARS_LINK_ID               , -- Value値　作業パターン変数紐付
       TAB_A.VAL_COL_SEQ_COMBINATION_ID     , -- 多次元変数配列組合せ管理 Pkey
       TAB_A.VAL_ASSIGN_SEQ                 , -- Value値　代入順序
       TAB_A.KEY_VARS_LINK_ID               , -- Key値　作業パターン変数紐付
       TAB_A.KEY_COL_SEQ_COMBINATION_ID     , -- 多次元変数配列組合せ管理 Pkey
       TAB_A.KEY_ASSIGN_SEQ                 , -- Key値　代入順序
       TAB_A.NULL_DATA_HANDLING_FLG         , -- Null値の連携
       TAB_B.MENU_GROUP_ID                  ,
       TAB_C.MENU_GROUP_NAME                ,
       TAB_A.MENU_ID           MENU_ID_CLONE,
       TAB_B.MENU_NAME                      ,
       TAB_A.COLUMN_LIST_ID             REST_COLUMN_LIST_ID,             -- REST/EXCEL/CSV用　CMDB処理対象メニューグループ+メニュー+カラム一覧の識別シーケンス
       TAB_A.VAL_VARS_LINK_ID           REST_VAL_VARS_LINK_ID,           -- REST/EXCEL/CSV用　Value値　作業パターン+変数名(作業パターン変数紐付)
       TAB_A.VAL_COL_SEQ_COMBINATION_ID REST_VAL_COL_SEQ_COMBINATION_ID, -- REST/EXCEL/CSV用　Value値　多次元変数配列組合せ管理 Pkey
       TAB_A.KEY_VARS_LINK_ID           REST_KEY_VARS_LINK_ID,           -- REST/EXCEL/CSV用　Key値　作業パターン+変数名(作業パターン変数紐付)
       TAB_A.KEY_COL_SEQ_COMBINATION_ID REST_KEY_COL_SEQ_COMBINATION_ID, -- REST/EXCEL/CSV用　Key値　多次元変数配列組合せ管理 Pkey
       TAB_A.DISP_SEQ                       ,
       TAB_A.ACCESS_AUTH                    ,
       TAB_A.NOTE                           ,
       TAB_A.DISUSE_FLAG                    ,
       TAB_A.LAST_UPDATE_TIMESTAMP          ,
       TAB_A.LAST_UPDATE_USER 
FROM B_ANS_LRL_VAL_ASSIGN_JNL TAB_A
LEFT JOIN A_MENU_LIST TAB_B ON (TAB_A.MENU_ID = TAB_B.MENU_ID)
LEFT JOIN A_MENU_GROUP_LIST TAB_C ON (TAB_B.MENU_GROUP_ID = TAB_C.MENU_GROUP_ID);

CREATE OR REPLACE VIEW D_ANS_PNS_VAL_ASSIGN AS 
SELECT 
       TAB_A.COLUMN_ID                      , -- 識別シーケンス
       TAB_A.MENU_ID                        , -- メニューID
       TAB_A.COLUMN_LIST_ID                 , -- CMDB処理対象メニューカラム一覧の識別シーケンス
       TAB_A.COL_TYPE                       , -- カラムタイプ　1/空白:Value型　2:Key-Value型　
       TAB_A.PATTERN_ID                     , -- 作業パターンID
       TAB_A.VAL_VARS_LINK_ID               , -- Value値　作業パターン変数紐付
       TAB_A.VAL_CHILD_VARS_LINK_ID         , -- Value値　作業パターンメンバー変数紐付
       TAB_A.VAL_ASSIGN_SEQ                 , -- Value値　代入順序
       TAB_A.VAL_CHILD_VARS_COL_SEQ         , -- Value値　列順序
       TAB_A.KEY_VARS_LINK_ID               , -- Key値　作業パターン変数紐付
       TAB_A.KEY_CHILD_VARS_LINK_ID         , -- Key値　作業パターンメンバー変数紐付
       TAB_A.KEY_ASSIGN_SEQ                 , -- Key値　代入順序
       TAB_A.KEY_CHILD_VARS_COL_SEQ         , -- Key値　列順序
       TAB_A.NULL_DATA_HANDLING_FLG         , -- Null値の連携
       TAB_B.MENU_GROUP_ID                  ,
       TAB_C.MENU_GROUP_NAME                ,
       TAB_A.MENU_ID           MENU_ID_CLONE,
       TAB_B.MENU_NAME                      ,
       TAB_A.COLUMN_LIST_ID    REST_COLUMN_LIST_ID,      -- REST/EXCEL/CSV用　CMDB処理対象メニューグループ+メニュー+カラム一覧の識別シーケンス
       TAB_A.VAL_VARS_LINK_ID  REST_VAL_VARS_LINK_ID,    -- REST/EXCEL/CSV用　Value値　作業パターン+変数名(作業パターン変数紐付)
       TAB_A.KEY_VARS_LINK_ID  REST_KEY_VARS_LINK_ID,    -- REST/EXCEL/CSV用　Key値　作業パターン+変数名(作業パターン変数紐付)
       TAB_A.DISP_SEQ                       ,
       TAB_A.ACCESS_AUTH                    ,
       TAB_A.NOTE                           ,
       TAB_A.DISUSE_FLAG                    ,
       TAB_A.LAST_UPDATE_TIMESTAMP          ,
       TAB_A.LAST_UPDATE_USER 
FROM B_ANS_PNS_VAL_ASSIGN TAB_A
LEFT JOIN A_MENU_LIST TAB_B ON (TAB_A.MENU_ID = TAB_B.MENU_ID)
LEFT JOIN A_MENU_GROUP_LIST TAB_C ON (TAB_B.MENU_GROUP_ID = TAB_C.MENU_GROUP_ID);

CREATE OR REPLACE VIEW D_ANS_PNS_VAL_ASSIGN_JNL AS 
SELECT TAB_A.JOURNAL_SEQ_NO                 ,
       TAB_A.JOURNAL_REG_DATETIME           ,
       TAB_A.JOURNAL_ACTION_CLASS           ,
       TAB_A.COLUMN_ID                      , -- 識別シーケンス
       TAB_A.MENU_ID                        , -- メニューID
       TAB_A.COLUMN_LIST_ID                 , -- CMDB処理対象メニューカラム一覧の識別シーケンス
       TAB_A.COL_TYPE                       , -- カラムタイプ　1/空白:Value型　2:Key-Value型　
       TAB_A.PATTERN_ID                     , -- 作業パターンID
       TAB_A.VAL_VARS_LINK_ID               , -- Value値　作業パターン変数紐付
       TAB_A.VAL_CHILD_VARS_LINK_ID         , -- Value値　作業パターンメンバー変数紐付
       TAB_A.VAL_ASSIGN_SEQ                 , -- Value値　代入順序
       TAB_A.VAL_CHILD_VARS_COL_SEQ         , -- Value値　列順序
       TAB_A.KEY_VARS_LINK_ID               , -- Key値　作業パターン変数紐付
       TAB_A.KEY_CHILD_VARS_LINK_ID         , -- Key値　作業パターンメンバー変数紐付
       TAB_A.KEY_ASSIGN_SEQ                 , -- Key値　代入順序
       TAB_A.KEY_CHILD_VARS_COL_SEQ         , -- Key値　列順序
       TAB_A.NULL_DATA_HANDLING_FLG         , -- Null値の連携
       TAB_B.MENU_GROUP_ID                  ,
       TAB_C.MENU_GROUP_NAME                ,
       TAB_A.MENU_ID           MENU_ID_CLONE,
       TAB_B.MENU_NAME                      ,
       TAB_A.COLUMN_LIST_ID    REST_COLUMN_LIST_ID,      -- REST/EXCEL/CSV用　CMDB処理対象メニューグループ+メニュー+カラム一覧の識別シーケンス
       TAB_A.VAL_VARS_LINK_ID  REST_VAL_VARS_LINK_ID,    -- REST/EXCEL/CSV用　Value値　作業パターン+変数名(作業パターン変数紐付)
       TAB_A.KEY_VARS_LINK_ID  REST_KEY_VARS_LINK_ID,    -- REST/EXCEL/CSV用　Key値　作業パターン+変数名(作業パターン変数紐付)
       TAB_A.DISP_SEQ                       ,
       TAB_A.ACCESS_AUTH                    ,
       TAB_A.NOTE                           ,
       TAB_A.DISUSE_FLAG                    ,
       TAB_A.LAST_UPDATE_TIMESTAMP          ,
       TAB_A.LAST_UPDATE_USER 
FROM B_ANS_PNS_VAL_ASSIGN_JNL TAB_A
LEFT JOIN A_MENU_LIST TAB_B ON (TAB_A.MENU_ID = TAB_B.MENU_ID)
LEFT JOIN A_MENU_GROUP_LIST TAB_C ON (TAB_B.MENU_GROUP_ID = TAB_C.MENU_GROUP_ID);

ALTER TABLE B_ANS_GLOBAL_VARS_MASTER ADD COLUMN ACCESS_AUTH TEXT AFTER DISP_SEQ;

ALTER TABLE B_ANS_GLOBAL_VARS_MASTER_JNL ADD COLUMN ACCESS_AUTH TEXT AFTER DISP_SEQ;

CREATE OR REPLACE VIEW D_B_ANSIBLE_PNS_VARS_ASSIGN AS
SELECT
  TAB_A.*,
  TAB_A.SYSTEM_ID               REST_SYSTEM_ID,
  TAB_A.VARS_LINK_ID            REST_VARS_LINK_ID
FROM
  B_ANSIBLE_PNS_VARS_ASSIGN TAB_A;
CREATE OR REPLACE VIEW D_B_ANSIBLE_PNS_VARS_ASSIGN_JNL AS
SELECT
  TAB_A.*,
  TAB_A.SYSTEM_ID               REST_SYSTEM_ID,
  TAB_A.VARS_LINK_ID            REST_VARS_LINK_ID
FROM
  B_ANSIBLE_PNS_VARS_ASSIGN_JNL TAB_A;

CREATE OR REPLACE VIEW E_ANS_PNS_PTN_VAR_LIST AS
SELECT DISTINCT
  TAB_A.VARS_LINK_ID          ,
  TAB_A.PATTERN_ID            ,
  TAB_A.VARS_NAME_ID          ,
  TAB_A.DISP_SEQ              ,
  TAB_C.ACCESS_AUTH           ,
  TAB_A.NOTE                  ,
  TAB_A.DISUSE_FLAG           ,
  TAB_A.LAST_UPDATE_TIMESTAMP ,
  TAB_A.LAST_UPDATE_USER      ,
  CONCAT(TAB_A.PATTERN_ID,':',TAB_C.PATTERN_NAME,':',TAB_A.VARS_LINK_ID,':',TAB_B.VARS_NAME) PTN_VAR_PULLDOWN
FROM
  B_ANS_PNS_PTN_VARS_LINK             TAB_A
  LEFT JOIN B_ANSIBLE_PNS_VARS_MASTER TAB_B ON ( TAB_A.VARS_NAME_ID = TAB_B.VARS_NAME_ID )
  LEFT JOIN C_PATTERN_PER_ORCH        TAB_C ON ( TAB_A.PATTERN_ID   = TAB_C.PATTERN_ID )
WHERE
  TAB_A.DISUSE_FLAG = '0' AND
  TAB_B.DISUSE_FLAG = '0' AND
  TAB_C.DISUSE_FLAG = '0';

CREATE OR REPLACE VIEW E_ANS_PNS_PTN_VAR_LIST_JNL AS
SELECT DISTINCT
  TAB_A.VARS_LINK_ID          ,
  TAB_A.PATTERN_ID            ,
  TAB_A.VARS_NAME_ID          ,
  TAB_A.DISP_SEQ              ,
  TAB_C.ACCESS_AUTH           ,
  TAB_A.NOTE                  ,
  TAB_A.DISUSE_FLAG           ,
  TAB_A.LAST_UPDATE_TIMESTAMP ,
  TAB_A.LAST_UPDATE_USER      ,
  CONCAT(TAB_A.PATTERN_ID,':',TAB_C.PATTERN_NAME,':',TAB_A.VARS_LINK_ID,':',TAB_B.VARS_NAME) PTN_VAR_PULLDOWN
FROM
  B_ANS_PNS_PTN_VARS_LINK_JNL             TAB_A
  LEFT JOIN B_ANSIBLE_PNS_VARS_MASTER_JNL TAB_B ON ( TAB_A.VARS_NAME_ID = TAB_B.VARS_NAME_ID )
  LEFT JOIN C_PATTERN_PER_ORCH_JNL        TAB_C ON ( TAB_A.PATTERN_ID   = TAB_C.PATTERN_ID )
WHERE
  TAB_A.DISUSE_FLAG = '0' AND
  TAB_B.DISUSE_FLAG = '0' AND
  TAB_C.DISUSE_FLAG = '0';

CREATE OR REPLACE VIEW E_ANS_PNS_STM_LIST AS
SELECT
  TAB_B.*,
  CONCAT(TAB_B.SYSTEM_ID,':',TAB_B.HOSTNAME) HOST_PULLDOWN
FROM
  (SELECT 
     SYSTEM_ID 
   FROM 
     B_ANSIBLE_PNS_PHO_LINK
   WHERE
     DISUSE_FLAG = '0'
   GROUP BY SYSTEM_ID
  ) TAB_A
  LEFT JOIN C_STM_LIST    TAB_B ON (TAB_A.SYSTEM_ID = TAB_B.SYSTEM_ID)
WHERE
  TAB_B.DISUSE_FLAG = '0';

CREATE OR REPLACE VIEW E_ANS_PNS_STM_LIST_JNL AS
SELECT
  TAB_B.*,
  CONCAT(TAB_B.SYSTEM_ID,':',TAB_B.HOSTNAME) HOST_PULLDOWN
FROM
  (SELECT 
     SYSTEM_ID 
   FROM 
     B_ANSIBLE_PNS_PHO_LINK_JNL
   WHERE
     DISUSE_FLAG = '0'
   GROUP BY SYSTEM_ID
  ) TAB_A
  LEFT JOIN C_STM_LIST_JNL TAB_B ON (TAB_A.SYSTEM_ID = TAB_B.SYSTEM_ID)
WHERE
  TAB_B.DISUSE_FLAG = '0';

CREATE OR REPLACE VIEW D_B_ANSIBLE_LNS_VARS_ASSIGN AS
SELECT
  TAB_A.*,
  TAB_A.SYSTEM_ID               REST_SYSTEM_ID,
  TAB_A.VARS_LINK_ID            REST_VARS_LINK_ID
FROM
  B_ANSIBLE_LNS_VARS_ASSIGN TAB_A;
CREATE OR REPLACE VIEW D_B_ANSIBLE_LNS_VARS_ASSIGN_JNL AS
SELECT
  TAB_A.*,
  TAB_A.SYSTEM_ID               REST_SYSTEM_ID,
  TAB_A.VARS_LINK_ID            REST_VARS_LINK_ID
FROM
  B_ANSIBLE_LNS_VARS_ASSIGN_JNL TAB_A;

CREATE OR REPLACE VIEW E_ANS_PNS_PTN_VAR_LIST_JNL AS
SELECT DISTINCT
  TAB_A.VARS_LINK_ID          ,
  TAB_A.PATTERN_ID            ,
  TAB_A.VARS_NAME_ID          ,
  TAB_A.DISP_SEQ              ,
  TAB_C.ACCESS_AUTH           ,
  TAB_A.NOTE                  ,
  TAB_A.DISUSE_FLAG           ,
  TAB_A.LAST_UPDATE_TIMESTAMP ,
  TAB_A.LAST_UPDATE_USER      ,
  CONCAT(TAB_A.PATTERN_ID,':',TAB_C.PATTERN_NAME,':',TAB_A.VARS_LINK_ID,':',TAB_B.VARS_NAME) PTN_VAR_PULLDOWN
FROM
  B_ANS_PNS_PTN_VARS_LINK_JNL             TAB_A
  LEFT JOIN B_ANSIBLE_PNS_VARS_MASTER_JNL TAB_B ON ( TAB_A.VARS_NAME_ID = TAB_B.VARS_NAME_ID )
  LEFT JOIN C_PATTERN_PER_ORCH_JNL        TAB_C ON ( TAB_A.PATTERN_ID   = TAB_C.PATTERN_ID )
WHERE
  TAB_A.DISUSE_FLAG = '0' AND
  TAB_B.DISUSE_FLAG = '0' AND
  TAB_C.DISUSE_FLAG = '0';

CREATE OR REPLACE VIEW E_ANS_LNS_PTN_VAR_LIST AS
SELECT DISTINCT
  TAB_A.VARS_LINK_ID          ,
  TAB_A.PATTERN_ID            ,
  TAB_A.VARS_NAME_ID          ,
  TAB_A.DISP_SEQ              ,
  TAB_C.ACCESS_AUTH           ,
  TAB_A.NOTE                  ,
  TAB_A.DISUSE_FLAG           ,
  TAB_A.LAST_UPDATE_TIMESTAMP ,
  TAB_A.LAST_UPDATE_USER      ,
  CONCAT(TAB_A.PATTERN_ID,':',TAB_C.PATTERN_NAME,':',TAB_A.VARS_LINK_ID,':',TAB_B.VARS_NAME) PTN_VAR_PULLDOWN
FROM
  B_ANS_LNS_PTN_VARS_LINK             TAB_A
  LEFT JOIN B_ANSIBLE_LNS_VARS_MASTER TAB_B ON ( TAB_A.VARS_NAME_ID = TAB_B.VARS_NAME_ID )
  LEFT JOIN C_PATTERN_PER_ORCH        TAB_C ON ( TAB_A.PATTERN_ID   = TAB_C.PATTERN_ID )
WHERE
  TAB_A.DISUSE_FLAG = '0' AND
  TAB_B.DISUSE_FLAG = '0' AND
  TAB_C.DISUSE_FLAG = '0';

CREATE OR REPLACE VIEW E_ANS_LNS_PTN_VAR_LIST_JNL AS
SELECT DISTINCT
  TAB_A.VARS_LINK_ID          ,
  TAB_A.PATTERN_ID            ,
  TAB_A.VARS_NAME_ID          ,
  TAB_A.DISP_SEQ              ,
  TAB_C.ACCESS_AUTH           ,
  TAB_A.NOTE                  ,
  TAB_A.DISUSE_FLAG           ,
  TAB_A.LAST_UPDATE_TIMESTAMP ,
  TAB_A.LAST_UPDATE_USER      ,
  CONCAT(TAB_A.PATTERN_ID,':',TAB_C.PATTERN_NAME,':',TAB_A.VARS_LINK_ID,':',TAB_B.VARS_NAME) PTN_VAR_PULLDOWN
FROM
  B_ANS_LNS_PTN_VARS_LINK_JNL             TAB_A
  LEFT JOIN B_ANSIBLE_LNS_VARS_MASTER_JNL TAB_B ON ( TAB_A.VARS_NAME_ID = TAB_B.VARS_NAME_ID )
  LEFT JOIN C_PATTERN_PER_ORCH_JNL        TAB_C ON ( TAB_A.PATTERN_ID   = TAB_C.PATTERN_ID )
WHERE
  TAB_A.DISUSE_FLAG = '0' AND
  TAB_B.DISUSE_FLAG = '0' AND
  TAB_C.DISUSE_FLAG = '0';

CREATE OR REPLACE VIEW E_ANS_LNS_STM_LIST AS
SELECT
  TAB_B.*,
  CONCAT(TAB_B.SYSTEM_ID,':',TAB_B.HOSTNAME) HOST_PULLDOWN
FROM
  (SELECT 
     SYSTEM_ID 
   FROM 
     B_ANSIBLE_LNS_PHO_LINK
   WHERE
     DISUSE_FLAG = '0'
   GROUP BY SYSTEM_ID
  ) TAB_A
  LEFT JOIN C_STM_LIST    TAB_B ON (TAB_A.SYSTEM_ID = TAB_B.SYSTEM_ID)
WHERE
  TAB_B.DISUSE_FLAG = '0';

CREATE OR REPLACE VIEW E_ANS_LNS_STM_LIST_JNL AS
SELECT
  TAB_B.*,
  CONCAT(TAB_B.SYSTEM_ID,':',TAB_B.HOSTNAME) HOST_PULLDOWN
FROM
  (SELECT 
     SYSTEM_ID 
   FROM 
     B_ANSIBLE_LNS_PHO_LINK_JNL
   WHERE
     DISUSE_FLAG = '0'
   GROUP BY SYSTEM_ID
  ) TAB_A
  LEFT JOIN C_STM_LIST_JNL TAB_B ON (TAB_A.SYSTEM_ID = TAB_B.SYSTEM_ID)
WHERE
  TAB_B.DISUSE_FLAG = '0';
  
CREATE OR REPLACE VIEW D_B_ANSIBLE_LRL_PATTERN_LINK AS
SELECT
  TAB_A.*,
  TAB_A.ROLE_ID REST_ROLE_ID
FROM
  B_ANSIBLE_LRL_PATTERN_LINK TAB_A;

CREATE OR REPLACE VIEW D_B_ANSIBLE_LRL_PATTERN_LINK_JNL AS
SELECT
  TAB_A.*,
  TAB_A.ROLE_ID REST_ROLE_ID
FROM
  B_ANSIBLE_LRL_PATTERN_LINK_JNL TAB_A;
  
CREATE OR REPLACE VIEW E_ANS_LRL_PKG_ROLE_LIST AS 
SELECT 
  TAB_A.*,
  TAB_B.ROLE_PACKAGE_NAME       ,
  TAB_B.ROLE_PACKAGE_FILE       ,
  CONCAT(TAB_B.ROLE_PACKAGE_ID,':',TAB_B.ROLE_PACKAGE_NAME,':',TAB_A.ROLE_ID,':',TAB_A.ROLE_NAME) ROLE_PACKAGE_PULLDOWN
FROM 
  B_ANSIBLE_LRL_ROLE     TAB_A
  LEFT JOIN B_ANSIBLE_LRL_ROLE_PACKAGE TAB_B ON ( TAB_A.ROLE_PACKAGE_ID = TAB_B.ROLE_PACKAGE_ID )
WHERE
  TAB_A.DISUSE_FLAG = '0' AND
  TAB_B.DISUSE_FLAG = '0';

CREATE OR REPLACE VIEW E_ANS_LRL_PKG_ROLE_LIST_JNL AS 
SELECT 
  TAB_A.*,
  TAB_B.ROLE_PACKAGE_NAME       ,
  TAB_B.ROLE_PACKAGE_FILE       ,
  CONCAT(TAB_B.ROLE_PACKAGE_ID,':',TAB_B.ROLE_PACKAGE_NAME,':',TAB_A.ROLE_ID,':',TAB_A.ROLE_NAME) ROLE_PACKAGE_PULLDOWN
FROM 
  B_ANSIBLE_LRL_ROLE_JNL                   TAB_A
  LEFT JOIN B_ANSIBLE_LRL_ROLE_PACKAGE_JNL TAB_B ON ( TAB_A.ROLE_PACKAGE_ID = TAB_B.ROLE_PACKAGE_ID )
WHERE
  TAB_A.DISUSE_FLAG = '0' AND
  TAB_B.DISUSE_FLAG = '0';
  
CREATE OR REPLACE VIEW D_B_ANSIBLE_LRL_VARS_ASSIGN AS
SELECT
  TAB_A.*,
  TAB_A.SYSTEM_ID               REST_SYSTEM_ID,
  TAB_A.VARS_LINK_ID            REST_VARS_LINK_ID,
  TAB_A.COL_SEQ_COMBINATION_ID  REST_COL_SEQ_COMBINATION_ID
FROM
  B_ANSIBLE_LRL_VARS_ASSIGN TAB_A;
  
CREATE OR REPLACE VIEW D_B_ANSIBLE_LRL_VARS_ASSIGN_JNL AS
SELECT
  TAB_A.*,
  TAB_A.SYSTEM_ID               REST_SYSTEM_ID,
  TAB_A.VARS_LINK_ID            REST_VARS_LINK_ID,
  TAB_A.COL_SEQ_COMBINATION_ID  REST_COL_SEQ_COMBINATION_ID
FROM
  B_ANSIBLE_LRL_VARS_ASSIGN_JNL TAB_A;

CREATE OR REPLACE VIEW E_ANS_LRL_PTN_VAR_LIST AS
SELECT DISTINCT
  TAB_A.VARS_LINK_ID          ,
  TAB_A.PATTERN_ID            ,
  TAB_A.VARS_NAME_ID          ,
  TAB_A.DISP_SEQ              ,
  TAB_C.ACCESS_AUTH           ,
  TAB_A.NOTE                  ,
  TAB_A.DISUSE_FLAG           ,
  TAB_A.LAST_UPDATE_TIMESTAMP ,
  TAB_A.LAST_UPDATE_USER      ,
  CONCAT(TAB_A.PATTERN_ID,':',TAB_C.PATTERN_NAME,':',TAB_A.VARS_LINK_ID,':',TAB_B.VARS_NAME) PTN_VAR_PULLDOWN
FROM
  B_ANS_LRL_PTN_VARS_LINK             TAB_A
  LEFT JOIN B_ANSIBLE_LRL_VARS_MASTER TAB_B ON ( TAB_A.VARS_NAME_ID = TAB_B.VARS_NAME_ID )
  LEFT JOIN C_PATTERN_PER_ORCH        TAB_C ON ( TAB_A.PATTERN_ID   = TAB_C.PATTERN_ID )
WHERE
  TAB_A.DISUSE_FLAG = '0' AND
  TAB_B.DISUSE_FLAG = '0' AND
  TAB_C.DISUSE_FLAG = '0';

CREATE OR REPLACE VIEW E_ANS_LRL_PTN_VAR_LIST_JNL AS
SELECT DISTINCT
  TAB_A.VARS_LINK_ID          ,
  TAB_A.PATTERN_ID            ,
  TAB_A.VARS_NAME_ID          ,
  TAB_A.DISP_SEQ              ,
  TAB_C.ACCESS_AUTH           ,
  TAB_A.NOTE                  ,
  TAB_A.DISUSE_FLAG           ,
  TAB_A.LAST_UPDATE_TIMESTAMP ,
  TAB_A.LAST_UPDATE_USER      ,
  CONCAT(TAB_A.PATTERN_ID,':',TAB_C.PATTERN_NAME,':',TAB_A.VARS_LINK_ID,':',TAB_B.VARS_NAME) PTN_VAR_PULLDOWN
FROM
  B_ANS_LRL_PTN_VARS_LINK_JNL             TAB_A
  LEFT JOIN B_ANSIBLE_LRL_VARS_MASTER_JNL TAB_B ON ( TAB_A.VARS_NAME_ID = TAB_B.VARS_NAME_ID )
  LEFT JOIN C_PATTERN_PER_ORCH_JNL        TAB_C ON ( TAB_A.PATTERN_ID   = TAB_C.PATTERN_ID )
WHERE
  TAB_A.DISUSE_FLAG = '0' AND
  TAB_B.DISUSE_FLAG = '0' AND
  TAB_C.DISUSE_FLAG = '0';

CREATE OR REPLACE VIEW E_ANS_LRL_VAR_MEMBER_LIST AS
SELECT DISTINCT
  TAB_A.*,
  CONCAT(TAB_B.VARS_NAME,'.',TAB_A.COL_SEQ_COMBINATION_ID,':',TAB_A.COL_COMBINATION_MEMBER_ALIAS) VAR_MEMBER_PULLDOWN
FROM
  B_ANS_LRL_MEMBER_COL_COMB               TAB_A
  LEFT JOIN B_ANSIBLE_LRL_VARS_MASTER     TAB_B ON ( TAB_A.VARS_NAME_ID = TAB_B.VARS_NAME_ID )
WHERE
  TAB_A.DISUSE_FLAG = '0' AND
  TAB_B.DISUSE_FLAG = '0';

CREATE OR REPLACE VIEW E_ANS_LRL_VAR_MEMBER_LIST_JNL AS
SELECT DISTINCT
  TAB_A.*,
  CONCAT(TAB_B.VARS_NAME,'.',TAB_A.COL_SEQ_COMBINATION_ID,':',TAB_A.COL_COMBINATION_MEMBER_ALIAS) VAR_MEMBER_PULLDOWN
FROM
  B_ANS_LRL_MEMBER_COL_COMB_JNL           TAB_A
  LEFT JOIN B_ANSIBLE_LRL_VARS_MASTER_JNL TAB_B ON ( TAB_A.VARS_NAME_ID = TAB_B.VARS_NAME_ID )
WHERE
  TAB_A.DISUSE_FLAG = '0' AND
  TAB_B.DISUSE_FLAG = '0';

CREATE OR REPLACE VIEW E_ANS_LRL_STM_LIST AS
SELECT
  TAB_B.*,
  CONCAT(TAB_B.SYSTEM_ID,':',TAB_B.HOSTNAME) HOST_PULLDOWN
FROM
  (SELECT 
     SYSTEM_ID 
   FROM 
     B_ANSIBLE_LRL_PHO_LINK
   WHERE
     DISUSE_FLAG = '0'
   GROUP BY SYSTEM_ID
  ) TAB_A
  LEFT JOIN C_STM_LIST    TAB_B ON (TAB_A.SYSTEM_ID = TAB_B.SYSTEM_ID)
WHERE
  TAB_B.DISUSE_FLAG = '0';

CREATE OR REPLACE VIEW E_ANS_LRL_STM_LIST_JNL AS
SELECT
  TAB_B.*,
  CONCAT(TAB_B.SYSTEM_ID,':',TAB_B.HOSTNAME) HOST_PULLDOWN
FROM
  (SELECT 
     SYSTEM_ID 
   FROM 
     B_ANSIBLE_LRL_PHO_LINK_JNL
   WHERE
     DISUSE_FLAG = '0'
   GROUP BY SYSTEM_ID
  ) TAB_A
  LEFT JOIN C_STM_LIST_JNL TAB_B ON (TAB_A.SYSTEM_ID = TAB_B.SYSTEM_ID)
WHERE
  TAB_B.DISUSE_FLAG = '0';

CREATE OR REPLACE VIEW D_ANS_LRL_MAX_MEMBER_COL AS
SELECT
   TAB_A.*,
   TAB_B.VARS_NAME     AS DISP_VARS_NAME,
   CASE TAB_C.VRAS_NAME_ALIAS
        WHEN '0' THEN '-'
        ELSE VRAS_NAME_ALIAS
   END DISP_VRAS_NAME_ALIAS
FROM      B_ANS_LRL_MAX_MEMBER_COL   TAB_A
LEFT JOIN B_ANSIBLE_LRL_VARS_MASTER  TAB_B ON ( TAB_A.VARS_NAME_ID    = TAB_B.VARS_NAME_ID    )
LEFT JOIN D_ANS_LRL_ARRAY_MEMBER     TAB_C ON ( TAB_A.ARRAY_MEMBER_ID = TAB_C.ARRAY_MEMBER_ID );

CREATE OR REPLACE VIEW D_ANS_LRL_MAX_MEMBER_COL_JNL AS
SELECT
   TAB_A.*,
   TAB_B.VARS_NAME     AS DISP_VARS_NAME,
   CASE TAB_C.VRAS_NAME_ALIAS
        WHEN '0' THEN '-'
        ELSE VRAS_NAME_ALIAS
   END DISP_VRAS_NAME_ALIAS
FROM      B_ANS_LRL_MAX_MEMBER_COL_JNL   TAB_A
LEFT JOIN B_ANSIBLE_LRL_VARS_MASTER_JNL  TAB_B ON ( TAB_A.VARS_NAME_ID    = TAB_B.VARS_NAME_ID    )
LEFT JOIN D_ANS_LRL_ARRAY_MEMBER_JNL     TAB_C ON ( TAB_A.ARRAY_MEMBER_ID = TAB_C.ARRAY_MEMBER_ID );



UPDATE A_SEQUENCE SET MENU_ID=2100040702, DISP_SEQ=2100210001, NOTE=NULL, LAST_UPDATE_TIMESTAMP=STR_TO_DATE('2015/04/01 10:00:00.000000','%Y/%m/%d %H:%i:%s.%f') WHERE NAME='B_ANSIBLE_IF_INFO_RIC';
UPDATE A_SEQUENCE SET MENU_ID=2100040702, DISP_SEQ=2100210002, NOTE='for the history table.', LAST_UPDATE_TIMESTAMP=STR_TO_DATE('2015/04/01 10:00:00.000000','%Y/%m/%d %H:%i:%s.%f') WHERE NAME='B_ANSIBLE_IF_INFO_JSQ';
UPDATE A_SEQUENCE SET MENU_ID=2100040706, DISP_SEQ=2100210003, NOTE=NULL, LAST_UPDATE_TIMESTAMP=STR_TO_DATE('2015/04/01 10:00:00.000000','%Y/%m/%d %H:%i:%s.%f') WHERE NAME='B_ANS_GLOBAL_VARS_MASTER_RIC';
UPDATE A_SEQUENCE SET MENU_ID=2100040706, DISP_SEQ=2100210004, NOTE='for the history table.', LAST_UPDATE_TIMESTAMP=STR_TO_DATE('2015/04/01 10:00:00.000000','%Y/%m/%d %H:%i:%s.%f') WHERE NAME='B_ANS_GLOBAL_VARS_MASTER_JSQ';
UPDATE A_SEQUENCE SET MENU_ID=2100040703, DISP_SEQ=2100210005, NOTE=NULL, LAST_UPDATE_TIMESTAMP=STR_TO_DATE('2015/04/01 10:00:00.000000','%Y/%m/%d %H:%i:%s.%f') WHERE NAME='B_ANS_CONTENTS_FILE_RIC';
UPDATE A_SEQUENCE SET MENU_ID=2100040703, DISP_SEQ=2100210006, NOTE='for the history table.', LAST_UPDATE_TIMESTAMP=STR_TO_DATE('2015/04/01 10:00:00.000000','%Y/%m/%d %H:%i:%s.%f') WHERE NAME='B_ANS_CONTENTS_FILE_JSQ';
UPDATE A_SEQUENCE SET MENU_ID=2100040704, DISP_SEQ=2100210007, NOTE=NULL, LAST_UPDATE_TIMESTAMP=STR_TO_DATE('2015/04/01 10:00:00.000000','%Y/%m/%d %H:%i:%s.%f') WHERE NAME='B_ANS_TEMPLATE_FILE_RIC';
UPDATE A_SEQUENCE SET MENU_ID=2100040704, DISP_SEQ=2100210008, NOTE='for the history table.', LAST_UPDATE_TIMESTAMP=STR_TO_DATE('2015/04/01 10:00:00.000000','%Y/%m/%d %H:%i:%s.%f') WHERE NAME='B_ANS_TEMPLATE_FILE_JSQ';
UPDATE A_SEQUENCE SET MENU_ID=2100040707, DISP_SEQ=2100210009, NOTE=NULL, LAST_UPDATE_TIMESTAMP=STR_TO_DATE('2015/04/01 10:00:00.000000','%Y/%m/%d %H:%i:%s.%f') WHERE NAME='B_ANS_COMVRAS_USLIST_RIC';
UPDATE A_SEQUENCE SET MENU_ID=2100040707, DISP_SEQ=2100210010, NOTE='for the history table.', LAST_UPDATE_TIMESTAMP=STR_TO_DATE('2015/04/01 10:00:00.000000','%Y/%m/%d %H:%i:%s.%f') WHERE NAME='B_ANS_COMVRAS_USLIST_JSQ';
UPDATE A_SEQUENCE SET MENU_ID=2100040708, DISP_SEQ=2100210011, NOTE=NULL, LAST_UPDATE_TIMESTAMP=STR_TO_DATE('2015/04/01 10:00:00.000000','%Y/%m/%d %H:%i:%s.%f') WHERE NAME='B_ANS_TWR_HOST_RIC';
UPDATE A_SEQUENCE SET MENU_ID=2100040708, DISP_SEQ=2100210012, NOTE='for the history table.', LAST_UPDATE_TIMESTAMP=STR_TO_DATE('2015/04/01 10:00:00.000000','%Y/%m/%d %H:%i:%s.%f') WHERE NAME='B_ANS_TWR_HOST_JSQ';
UPDATE A_SEQUENCE SET MENU_ID=2100020104, DISP_SEQ=2100220001, NOTE=NULL, LAST_UPDATE_TIMESTAMP=STR_TO_DATE('2015/04/01 10:00:00.000000','%Y/%m/%d %H:%i:%s.%f') WHERE NAME='B_ANSIBLE_LNS_PLAYBOOK_RIC';
UPDATE A_SEQUENCE SET MENU_ID=2100020104, DISP_SEQ=2100220002, NOTE='for the history table.', LAST_UPDATE_TIMESTAMP=STR_TO_DATE('2015/04/01 10:00:00.000000','%Y/%m/%d %H:%i:%s.%f') WHERE NAME='B_ANSIBLE_LNS_PLAYBOOK_JSQ';
UPDATE A_SEQUENCE SET MENU_ID=2100020108, DISP_SEQ=2100220003, NOTE=NULL, LAST_UPDATE_TIMESTAMP=STR_TO_DATE('2015/04/01 10:00:00.000000','%Y/%m/%d %H:%i:%s.%f') WHERE NAME='B_ANSIBLE_LNS_PHO_LINK_RIC';
UPDATE A_SEQUENCE SET MENU_ID=2100020108, DISP_SEQ=2100220004, NOTE='for the history table.', LAST_UPDATE_TIMESTAMP=STR_TO_DATE('2015/04/01 10:00:00.000000','%Y/%m/%d %H:%i:%s.%f') WHERE NAME='B_ANSIBLE_LNS_PHO_LINK_JSQ';
UPDATE A_SEQUENCE SET MENU_ID=2100020105, DISP_SEQ=2100220005, NOTE=NULL, LAST_UPDATE_TIMESTAMP=STR_TO_DATE('2015/04/01 10:00:00.000000','%Y/%m/%d %H:%i:%s.%f') WHERE NAME='B_ANSIBLE_LNS_PATTERN_LINK_RIC';
UPDATE A_SEQUENCE SET MENU_ID=2100020105, DISP_SEQ=2100220006, NOTE='for the history table.', LAST_UPDATE_TIMESTAMP=STR_TO_DATE('2015/04/01 10:00:00.000000','%Y/%m/%d %H:%i:%s.%f') WHERE NAME='B_ANSIBLE_LNS_PATTERN_LINK_JSQ';
UPDATE A_SEQUENCE SET MENU_ID=2100020106, DISP_SEQ=2100220007, NOTE=NULL, LAST_UPDATE_TIMESTAMP=STR_TO_DATE('2015/04/01 10:00:00.000000','%Y/%m/%d %H:%i:%s.%f') WHERE NAME='B_ANSIBLE_LNS_VARS_MASTER_RIC';
UPDATE A_SEQUENCE SET MENU_ID=2100020106, DISP_SEQ=2100220008, NOTE='for the history table.', LAST_UPDATE_TIMESTAMP=STR_TO_DATE('2015/04/01 10:00:00.000000','%Y/%m/%d %H:%i:%s.%f') WHERE NAME='B_ANSIBLE_LNS_VARS_MASTER_JSQ';
UPDATE A_SEQUENCE SET MENU_ID=2100020107, DISP_SEQ=2100220009, NOTE=NULL, LAST_UPDATE_TIMESTAMP=STR_TO_DATE('2015/04/01 10:00:00.000000','%Y/%m/%d %H:%i:%s.%f') WHERE NAME='B_ANS_LNS_PTN_VARS_LINK_RIC';
UPDATE A_SEQUENCE SET MENU_ID=2100020107, DISP_SEQ=2100220010, NOTE='for the history table.', LAST_UPDATE_TIMESTAMP=STR_TO_DATE('2015/04/01 10:00:00.000000','%Y/%m/%d %H:%i:%s.%f') WHERE NAME='B_ANS_LNS_PTN_VARS_LINK_JSQ';
UPDATE A_SEQUENCE SET MENU_ID=2100020109, DISP_SEQ=2100220011, NOTE=NULL, LAST_UPDATE_TIMESTAMP=STR_TO_DATE('2015/04/01 10:00:00.000000','%Y/%m/%d %H:%i:%s.%f') WHERE NAME='B_ANSIBLE_LNS_VARS_ASSIGN_RIC';
UPDATE A_SEQUENCE SET MENU_ID=2100020109, DISP_SEQ=2100220012, NOTE='for the history table.', LAST_UPDATE_TIMESTAMP=STR_TO_DATE('2015/04/01 10:00:00.000000','%Y/%m/%d %H:%i:%s.%f') WHERE NAME='B_ANSIBLE_LNS_VARS_ASSIGN_JSQ';
UPDATE A_SEQUENCE SET MENU_ID=2100020113, DISP_SEQ=2100220013, NOTE=NULL, LAST_UPDATE_TIMESTAMP=STR_TO_DATE('2015/04/01 10:00:00.000000','%Y/%m/%d %H:%i:%s.%f') WHERE NAME='C_ANSIBLE_LNS_EXE_INS_MNG_RIC';
UPDATE A_SEQUENCE SET MENU_ID=2100020113, DISP_SEQ=2100220014, NOTE='for the history table.', LAST_UPDATE_TIMESTAMP=STR_TO_DATE('2015/04/01 10:00:00.000000','%Y/%m/%d %H:%i:%s.%f') WHERE NAME='C_ANSIBLE_LNS_EXE_INS_MNG_JSQ';
UPDATE A_SEQUENCE SET MENU_ID=2100020303, DISP_SEQ=2100220015, NOTE=NULL, LAST_UPDATE_TIMESTAMP=STR_TO_DATE('2015/04/01 10:00:00.000000','%Y/%m/%d %H:%i:%s.%f') WHERE NAME='B_ANSIBLE_LRL_ROLE_PACKAGE_RIC';
UPDATE A_SEQUENCE SET MENU_ID=2100020303, DISP_SEQ=2100220016, NOTE='for the history table.', LAST_UPDATE_TIMESTAMP=STR_TO_DATE('2015/04/01 10:00:00.000000','%Y/%m/%d %H:%i:%s.%f') WHERE NAME='B_ANSIBLE_LRL_ROLE_PACKAGE_JSQ';
UPDATE A_SEQUENCE SET MENU_ID=2100020304, DISP_SEQ=2100220017, NOTE=NULL, LAST_UPDATE_TIMESTAMP=STR_TO_DATE('2015/04/01 10:00:00.000000','%Y/%m/%d %H:%i:%s.%f') WHERE NAME='B_ANSIBLE_LRL_ROLE_RIC';
UPDATE A_SEQUENCE SET MENU_ID=2100020304, DISP_SEQ=2100220018, NOTE='for the history table.', LAST_UPDATE_TIMESTAMP=STR_TO_DATE('2015/04/01 10:00:00.000000','%Y/%m/%d %H:%i:%s.%f') WHERE NAME='B_ANSIBLE_LRL_ROLE_JSQ';
UPDATE A_SEQUENCE SET MENU_ID=2100020305, DISP_SEQ=2100220019, NOTE=NULL, LAST_UPDATE_TIMESTAMP=STR_TO_DATE('2015/04/01 10:00:00.000000','%Y/%m/%d %H:%i:%s.%f') WHERE NAME='B_ANSIBLE_LRL_ROLE_VARS_RIC';
UPDATE A_SEQUENCE SET MENU_ID=2100020305, DISP_SEQ=2100220020, NOTE='for the history table.', LAST_UPDATE_TIMESTAMP=STR_TO_DATE('2015/04/01 10:00:00.000000','%Y/%m/%d %H:%i:%s.%f') WHERE NAME='B_ANSIBLE_LRL_ROLE_VARS_JSQ';
UPDATE A_SEQUENCE SET MENU_ID=2100020314, DISP_SEQ=2100220021, NOTE=NULL, LAST_UPDATE_TIMESTAMP=STR_TO_DATE('2015/04/01 10:00:00.000000','%Y/%m/%d %H:%i:%s.%f') WHERE NAME='C_ANSIBLE_LRL_EXE_INS_MNG_RIC';
UPDATE A_SEQUENCE SET MENU_ID=2100020314, DISP_SEQ=2100220022, NOTE='for the history table.', LAST_UPDATE_TIMESTAMP=STR_TO_DATE('2015/04/01 10:00:00.000000','%Y/%m/%d %H:%i:%s.%f') WHERE NAME='C_ANSIBLE_LRL_EXE_INS_MNG_JSQ';
UPDATE A_SEQUENCE SET MENU_ID=2100020307, DISP_SEQ=2100220023, NOTE=NULL, LAST_UPDATE_TIMESTAMP=STR_TO_DATE('2015/04/01 10:00:00.000000','%Y/%m/%d %H:%i:%s.%f') WHERE NAME='B_ANSIBLE_LRL_PATTERN_LINK_RIC';
UPDATE A_SEQUENCE SET MENU_ID=2100020307, DISP_SEQ=2100220024, NOTE='for the history table.', LAST_UPDATE_TIMESTAMP=STR_TO_DATE('2015/04/01 10:00:00.000000','%Y/%m/%d %H:%i:%s.%f') WHERE NAME='B_ANSIBLE_LRL_PATTERN_LINK_JSQ';
UPDATE A_SEQUENCE SET MENU_ID=2100020310, DISP_SEQ=2100220025, NOTE=NULL, LAST_UPDATE_TIMESTAMP=STR_TO_DATE('2015/04/01 10:00:00.000000','%Y/%m/%d %H:%i:%s.%f') WHERE NAME='B_ANSIBLE_LRL_PHO_LINK_RIC';
UPDATE A_SEQUENCE SET MENU_ID=2100020310, DISP_SEQ=2100220026, NOTE='for the history table.', LAST_UPDATE_TIMESTAMP=STR_TO_DATE('2015/04/01 10:00:00.000000','%Y/%m/%d %H:%i:%s.%f') WHERE NAME='B_ANSIBLE_LRL_PHO_LINK_JSQ';
UPDATE A_SEQUENCE SET MENU_ID=2100020308, DISP_SEQ=2100220027, NOTE=NULL, LAST_UPDATE_TIMESTAMP=STR_TO_DATE('2015/04/01 10:00:00.000000','%Y/%m/%d %H:%i:%s.%f') WHERE NAME='B_ANSIBLE_LRL_VARS_MASTER_RIC';
UPDATE A_SEQUENCE SET MENU_ID=2100020308, DISP_SEQ=2100220028, NOTE='for the history table.', LAST_UPDATE_TIMESTAMP=STR_TO_DATE('2015/04/01 10:00:00.000000','%Y/%m/%d %H:%i:%s.%f') WHERE NAME='B_ANSIBLE_LRL_VARS_MASTER_JSQ';
UPDATE A_SEQUENCE SET MENU_ID=2100020315, DISP_SEQ=2100220029, NOTE=NULL, LAST_UPDATE_TIMESTAMP=STR_TO_DATE('2015/04/01 10:00:00.000000','%Y/%m/%d %H:%i:%s.%f') WHERE NAME='B_ANSIBLE_LRL_CHILD_VARS_RIC';
UPDATE A_SEQUENCE SET MENU_ID=2100020315, DISP_SEQ=2100220030, NOTE='for the history table.', LAST_UPDATE_TIMESTAMP=STR_TO_DATE('2015/04/01 10:00:00.000000','%Y/%m/%d %H:%i:%s.%f') WHERE NAME='B_ANSIBLE_LRL_CHILD_VARS_JSQ';
UPDATE A_SEQUENCE SET MENU_ID=2100020309, DISP_SEQ=2100220031, NOTE=NULL, LAST_UPDATE_TIMESTAMP=STR_TO_DATE('2015/04/01 10:00:00.000000','%Y/%m/%d %H:%i:%s.%f') WHERE NAME='B_ANS_LRL_PTN_VARS_LINK_RIC';
UPDATE A_SEQUENCE SET MENU_ID=2100020309, DISP_SEQ=2100220032, NOTE='for the history table.', LAST_UPDATE_TIMESTAMP=STR_TO_DATE('2015/04/01 10:00:00.000000','%Y/%m/%d %H:%i:%s.%f') WHERE NAME='B_ANS_LRL_PTN_VARS_LINK_JSQ';
UPDATE A_SEQUENCE SET MENU_ID=2100020311, DISP_SEQ=2100220033, NOTE=NULL, LAST_UPDATE_TIMESTAMP=STR_TO_DATE('2015/04/01 10:00:00.000000','%Y/%m/%d %H:%i:%s.%f') WHERE NAME='B_ANSIBLE_LRL_VARS_ASSIGN_RIC';
UPDATE A_SEQUENCE SET MENU_ID=2100020311, DISP_SEQ=2100220034, NOTE='for the history table.', LAST_UPDATE_TIMESTAMP=STR_TO_DATE('2015/04/01 10:00:00.000000','%Y/%m/%d %H:%i:%s.%f') WHERE NAME='B_ANSIBLE_LRL_VARS_ASSIGN_JSQ';
UPDATE A_SEQUENCE SET MENU_ID=2100020115, DISP_SEQ=2100220035, NOTE=NULL, LAST_UPDATE_TIMESTAMP=STR_TO_DATE('2015/04/01 10:00:00.000000','%Y/%m/%d %H:%i:%s.%f') WHERE NAME='B_ANS_LNS_VAL_ASSIGN_RIC';
UPDATE A_SEQUENCE SET MENU_ID=2100020115, DISP_SEQ=2100220036, NOTE='for the history table.', LAST_UPDATE_TIMESTAMP=STR_TO_DATE('2015/04/01 10:00:00.000000','%Y/%m/%d %H:%i:%s.%f') WHERE NAME='B_ANS_LNS_VAL_ASSIGN_JSQ';
UPDATE A_SEQUENCE SET MENU_ID=2100020316, DISP_SEQ=2100220037, NOTE=NULL, LAST_UPDATE_TIMESTAMP=STR_TO_DATE('2015/04/01 10:00:00.000000','%Y/%m/%d %H:%i:%s.%f') WHERE NAME='B_ANS_LRL_VAL_ASSIGN_RIC';
UPDATE A_SEQUENCE SET MENU_ID=2100020316, DISP_SEQ=2100220038, NOTE='for the history table.', LAST_UPDATE_TIMESTAMP=STR_TO_DATE('2015/04/01 10:00:00.000000','%Y/%m/%d %H:%i:%s.%f') WHERE NAME='B_ANS_LRL_VAL_ASSIGN_JSQ';
UPDATE A_SEQUENCE SET MENU_ID=2100020317, DISP_SEQ=2100220039, NOTE=NULL, LAST_UPDATE_TIMESTAMP=STR_TO_DATE('2015/04/01 10:00:00.000000','%Y/%m/%d %H:%i:%s.%f') WHERE NAME='B_ANS_LRL_ROLE_VARSVAL_RIC';
UPDATE A_SEQUENCE SET MENU_ID=2100020317, DISP_SEQ=2100220040, NOTE='for the history table.', LAST_UPDATE_TIMESTAMP=STR_TO_DATE('2015/04/01 10:00:00.000000','%Y/%m/%d %H:%i:%s.%f') WHERE NAME='B_ANS_LRL_ROLE_VARSVAL_JSQ';
UPDATE A_SEQUENCE SET MENU_ID=2100020318, DISP_SEQ=2100220041, NOTE=NULL, LAST_UPDATE_TIMESTAMP=STR_TO_DATE('2015/04/01 10:00:00.000000','%Y/%m/%d %H:%i:%s.%f') WHERE NAME='B_ANS_LRL_ARRAY_MEMBER_RIC';
UPDATE A_SEQUENCE SET MENU_ID=2100020318, DISP_SEQ=2100220042, NOTE='for the history table.', LAST_UPDATE_TIMESTAMP=STR_TO_DATE('2015/04/01 10:00:00.000000','%Y/%m/%d %H:%i:%s.%f') WHERE NAME='B_ANS_LRL_ARRAY_MEMBER_JSQ';
UPDATE A_SEQUENCE SET MENU_ID=2100020319, DISP_SEQ=2100220043, NOTE=NULL, LAST_UPDATE_TIMESTAMP=STR_TO_DATE('2015/04/01 10:00:00.000000','%Y/%m/%d %H:%i:%s.%f') WHERE NAME='B_ANS_LRL_MAX_MEMBER_COL_RIC';
UPDATE A_SEQUENCE SET MENU_ID=2100020319, DISP_SEQ=2100220044, NOTE='for the history table.', LAST_UPDATE_TIMESTAMP=STR_TO_DATE('2015/04/01 10:00:00.000000','%Y/%m/%d %H:%i:%s.%f') WHERE NAME='B_ANS_LRL_MAX_MEMBER_COL_JSQ';
UPDATE A_SEQUENCE SET MENU_ID=2100020320, DISP_SEQ=2100220045, NOTE=NULL, LAST_UPDATE_TIMESTAMP=STR_TO_DATE('2015/04/01 10:00:00.000000','%Y/%m/%d %H:%i:%s.%f') WHERE NAME='B_ANS_LRL_MEMBER_COL_COMB_RIC';
UPDATE A_SEQUENCE SET MENU_ID=2100020320, DISP_SEQ=2100220046, NOTE='for the history table.', LAST_UPDATE_TIMESTAMP=STR_TO_DATE('2015/04/01 10:00:00.000000','%Y/%m/%d %H:%i:%s.%f') WHERE NAME='B_ANS_LRL_MEMBER_COL_COMB_JSQ';
UPDATE A_SEQUENCE SET MENU_ID=2100020322, DISP_SEQ=2100220047, NOTE=NULL, LAST_UPDATE_TIMESTAMP=STR_TO_DATE('2015/04/01 10:00:00.000000','%Y/%m/%d %H:%i:%s.%f') WHERE NAME='B_ANS_LRL_RP_REP_VARS_LIST_RIC';
UPDATE A_SEQUENCE SET MENU_ID=2100020322, DISP_SEQ=2100220048, NOTE='for the history table.', LAST_UPDATE_TIMESTAMP=STR_TO_DATE('2015/04/01 10:00:00.000000','%Y/%m/%d %H:%i:%s.%f') WHERE NAME='B_ANS_LRL_RP_REP_VARS_LIST_JSQ';
UPDATE A_SEQUENCE SET MENU_ID=2100000302, DISP_SEQ=2100230001, NOTE=NULL, LAST_UPDATE_TIMESTAMP=STR_TO_DATE('2015/04/01 10:00:00.000000','%Y/%m/%d %H:%i:%s.%f') WHERE NAME='B_OS_TYPE_RIC';
UPDATE A_SEQUENCE SET MENU_ID=2100000302, DISP_SEQ=2100230002, NOTE='for the history table.', LAST_UPDATE_TIMESTAMP=STR_TO_DATE('2015/04/01 10:00:00.000000','%Y/%m/%d %H:%i:%s.%f') WHERE NAME='B_OS_TYPE_JSQ';
UPDATE A_SEQUENCE SET MENU_ID=2100020204, DISP_SEQ=2100230003, NOTE=NULL, LAST_UPDATE_TIMESTAMP=STR_TO_DATE('2015/04/01 10:00:00.000000','%Y/%m/%d %H:%i:%s.%f') WHERE NAME='B_ANSIBLE_PNS_DIALOG_TYPE_RIC';
UPDATE A_SEQUENCE SET MENU_ID=2100020204, DISP_SEQ=2100230004, NOTE='for the history table.', LAST_UPDATE_TIMESTAMP=STR_TO_DATE('2015/04/01 10:00:00.000000','%Y/%m/%d %H:%i:%s.%f') WHERE NAME='B_ANSIBLE_PNS_DIALOG_TYPE_JSQ';
UPDATE A_SEQUENCE SET MENU_ID=2100020205, DISP_SEQ=2100230005, NOTE=NULL, LAST_UPDATE_TIMESTAMP=STR_TO_DATE('2015/04/01 10:00:00.000000','%Y/%m/%d %H:%i:%s.%f') WHERE NAME='B_ANSIBLE_PNS_DIALOG_RIC';
UPDATE A_SEQUENCE SET MENU_ID=2100020205, DISP_SEQ=2100230006, NOTE='for the history table.', LAST_UPDATE_TIMESTAMP=STR_TO_DATE('2015/04/01 10:00:00.000000','%Y/%m/%d %H:%i:%s.%f') WHERE NAME='B_ANSIBLE_PNS_DIALOG_JSQ';
UPDATE A_SEQUENCE SET MENU_ID=2100020209, DISP_SEQ=2100230007, NOTE=NULL, LAST_UPDATE_TIMESTAMP=STR_TO_DATE('2015/04/01 10:00:00.000000','%Y/%m/%d %H:%i:%s.%f') WHERE NAME='B_ANSIBLE_PNS_PHO_LINK_RIC';
UPDATE A_SEQUENCE SET MENU_ID=2100020209, DISP_SEQ=2100230008, NOTE='for the history table.', LAST_UPDATE_TIMESTAMP=STR_TO_DATE('2015/04/01 10:00:00.000000','%Y/%m/%d %H:%i:%s.%f') WHERE NAME='B_ANSIBLE_PNS_PHO_LINK_JSQ';
UPDATE A_SEQUENCE SET MENU_ID=2100020206, DISP_SEQ=2100230009, NOTE=NULL, LAST_UPDATE_TIMESTAMP=STR_TO_DATE('2015/04/01 10:00:00.000000','%Y/%m/%d %H:%i:%s.%f') WHERE NAME='B_ANSIBLE_PNS_PATTERN_LINK_RIC';
UPDATE A_SEQUENCE SET MENU_ID=2100020206, DISP_SEQ=2100230010, NOTE='for the history table.', LAST_UPDATE_TIMESTAMP=STR_TO_DATE('2015/04/01 10:00:00.000000','%Y/%m/%d %H:%i:%s.%f') WHERE NAME='B_ANSIBLE_PNS_PATTERN_LINK_JSQ';
UPDATE A_SEQUENCE SET MENU_ID=2100020207, DISP_SEQ=2100230011, NOTE=NULL, LAST_UPDATE_TIMESTAMP=STR_TO_DATE('2015/04/01 10:00:00.000000','%Y/%m/%d %H:%i:%s.%f') WHERE NAME='B_ANSIBLE_PNS_VARS_MASTER_RIC';
UPDATE A_SEQUENCE SET MENU_ID=2100020207, DISP_SEQ=2100230012, NOTE='for the history table.', LAST_UPDATE_TIMESTAMP=STR_TO_DATE('2015/04/01 10:00:00.000000','%Y/%m/%d %H:%i:%s.%f') WHERE NAME='B_ANSIBLE_PNS_VARS_MASTER_JSQ';
UPDATE A_SEQUENCE SET MENU_ID=2100020208, DISP_SEQ=2100230013, NOTE=NULL, LAST_UPDATE_TIMESTAMP=STR_TO_DATE('2015/04/01 10:00:00.000000','%Y/%m/%d %H:%i:%s.%f') WHERE NAME='B_ANS_PNS_PTN_VARS_LINK_RIC';
UPDATE A_SEQUENCE SET MENU_ID=2100020208, DISP_SEQ=2100230014, NOTE='for the history table.', LAST_UPDATE_TIMESTAMP=STR_TO_DATE('2015/04/01 10:00:00.000000','%Y/%m/%d %H:%i:%s.%f') WHERE NAME='B_ANS_PNS_PTN_VARS_LINK_JSQ';
UPDATE A_SEQUENCE SET MENU_ID=2100020210, DISP_SEQ=2100230015, NOTE=NULL, LAST_UPDATE_TIMESTAMP=STR_TO_DATE('2015/04/01 10:00:00.000000','%Y/%m/%d %H:%i:%s.%f') WHERE NAME='B_ANSIBLE_PNS_VARS_ASSIGN_RIC';
UPDATE A_SEQUENCE SET MENU_ID=2100020210, DISP_SEQ=2100230016, NOTE='for the history table.', LAST_UPDATE_TIMESTAMP=STR_TO_DATE('2015/04/01 10:00:00.000000','%Y/%m/%d %H:%i:%s.%f') WHERE NAME='B_ANSIBLE_PNS_VARS_ASSIGN_JSQ';
UPDATE A_SEQUENCE SET MENU_ID=2100020213, DISP_SEQ=2100230017, NOTE=NULL, LAST_UPDATE_TIMESTAMP=STR_TO_DATE('2015/04/01 10:00:00.000000','%Y/%m/%d %H:%i:%s.%f') WHERE NAME='C_ANSIBLE_PNS_EXE_INS_MNG_RIC';
UPDATE A_SEQUENCE SET MENU_ID=2100020213, DISP_SEQ=2100230018, NOTE='for the history table.', LAST_UPDATE_TIMESTAMP=STR_TO_DATE('2015/04/01 10:00:00.000000','%Y/%m/%d %H:%i:%s.%f') WHERE NAME='C_ANSIBLE_PNS_EXE_INS_MNG_JSQ';
UPDATE A_SEQUENCE SET MENU_ID=2100020214, DISP_SEQ=2100230019, NOTE=NULL, LAST_UPDATE_TIMESTAMP=STR_TO_DATE('2015/04/01 10:00:00.000000','%Y/%m/%d %H:%i:%s.%f') WHERE NAME='B_ANS_PNS_VAL_ASSIGN_RIC';
UPDATE A_SEQUENCE SET MENU_ID=2100020214, DISP_SEQ=2100230020, NOTE='for the history table.', LAST_UPDATE_TIMESTAMP=STR_TO_DATE('2015/04/01 10:00:00.000000','%Y/%m/%d %H:%i:%s.%f') WHERE NAME='B_ANS_PNS_VAL_ASSIGN_JSQ';
UPDATE A_SEQUENCE SET MENU_ID=NULL, DISP_SEQ=2100290001, NOTE=NULL, LAST_UPDATE_TIMESTAMP=STR_TO_DATE('2015/04/01 10:00:00.000000','%Y/%m/%d %H:%i:%s.%f') WHERE NAME='B_ANSIBLE_STATUS_RIC';
UPDATE A_SEQUENCE SET MENU_ID=NULL, DISP_SEQ=2100290002, NOTE='for the history table.', LAST_UPDATE_TIMESTAMP=STR_TO_DATE('2015/04/01 10:00:00.000000','%Y/%m/%d %H:%i:%s.%f') WHERE NAME='B_ANSIBLE_STATUS_JSQ';
UPDATE A_SEQUENCE SET MENU_ID=NULL, DISP_SEQ=2100290003, NOTE=NULL, LAST_UPDATE_TIMESTAMP=STR_TO_DATE('2015/04/01 10:00:00.000000','%Y/%m/%d %H:%i:%s.%f') WHERE NAME='B_ANSIBLE_RUN_MODE_RIC';
UPDATE A_SEQUENCE SET MENU_ID=NULL, DISP_SEQ=2100290004, NOTE='for the history table.', LAST_UPDATE_TIMESTAMP=STR_TO_DATE('2015/04/01 10:00:00.000000','%Y/%m/%d %H:%i:%s.%f') WHERE NAME='B_ANSIBLE_RUN_MODE_JSQ';
UPDATE A_SEQUENCE SET MENU_ID=NULL, DISP_SEQ=2100290005, NOTE=NULL, LAST_UPDATE_TIMESTAMP=STR_TO_DATE('2015/04/01 10:00:00.000000','%Y/%m/%d %H:%i:%s.%f') WHERE NAME='B_ANS_VARS_TYPE_RIC';
UPDATE A_SEQUENCE SET MENU_ID=NULL, DISP_SEQ=2100290006, NOTE='for the history table.', LAST_UPDATE_TIMESTAMP=STR_TO_DATE('2015/04/01 10:00:00.000000','%Y/%m/%d %H:%i:%s.%f') WHERE NAME='B_ANS_VARS_TYPE_JSQ';
UPDATE A_SEQUENCE SET MENU_ID=NULL, DISP_SEQ=2100290007, NOTE=NULL, LAST_UPDATE_TIMESTAMP=STR_TO_DATE('2015/04/01 10:00:00.000000','%Y/%m/%d %H:%i:%s.%f') WHERE NAME='B_ANSTWR_INSTANCE_GROUP_RIC';
UPDATE A_SEQUENCE SET MENU_ID=NULL, DISP_SEQ=2100290008, NOTE='for the history table.', LAST_UPDATE_TIMESTAMP=STR_TO_DATE('2015/04/01 10:00:00.000000','%Y/%m/%d %H:%i:%s.%f') WHERE NAME='B_ANSTWR_INSTANCE_GROUP_JSQ';
UPDATE A_SEQUENCE SET MENU_ID=NULL, DISP_SEQ=2100290009, NOTE=NULL, LAST_UPDATE_TIMESTAMP=STR_TO_DATE('2015/04/01 10:00:00.000000','%Y/%m/%d %H:%i:%s.%f') WHERE NAME='B_ANS_TWER_RUNDATA_DEL_FLAG_RIC';
UPDATE A_SEQUENCE SET MENU_ID=NULL, DISP_SEQ=2100290010, NOTE='for the history table.', LAST_UPDATE_TIMESTAMP=STR_TO_DATE('2015/04/01 10:00:00.000000','%Y/%m/%d %H:%i:%s.%f') WHERE NAME='B_ANS_TWER_RUNDATA_DEL_FLAG_JSQ';
UPDATE A_SEQUENCE SET MENU_ID=NULL, DISP_SEQ=2100290011, NOTE=NULL, LAST_UPDATE_TIMESTAMP=STR_TO_DATE('2015/04/01 10:00:00.000000','%Y/%m/%d %H:%i:%s.%f') WHERE NAME='B_ANSIBLE_EXEC_MODE_RIC';
UPDATE A_SEQUENCE SET MENU_ID=NULL, DISP_SEQ=2100290012, NOTE='for the history table.', LAST_UPDATE_TIMESTAMP=STR_TO_DATE('2015/04/01 10:00:00.000000','%Y/%m/%d %H:%i:%s.%f') WHERE NAME='B_ANSIBLE_EXEC_MODE_JSQ';
UPDATE A_SEQUENCE SET MENU_ID=NULL, DISP_SEQ=2100290013, NOTE=NULL, LAST_UPDATE_TIMESTAMP=STR_TO_DATE('2015/04/01 10:00:00.000000','%Y/%m/%d %H:%i:%s.%f') WHERE NAME='B_ANS_TWR_INSTANCE_GROUP_RIC';
UPDATE A_SEQUENCE SET MENU_ID=NULL, DISP_SEQ=2100290014, NOTE='for the history table.', LAST_UPDATE_TIMESTAMP=STR_TO_DATE('2015/04/01 10:00:00.000000','%Y/%m/%d %H:%i:%s.%f') WHERE NAME='B_ANS_TWR_INSTANCE_GROUP_JSQ';
UPDATE A_SEQUENCE SET MENU_ID=NULL, DISP_SEQ=2100290015, NOTE=NULL, LAST_UPDATE_TIMESTAMP=STR_TO_DATE('2015/04/01 10:00:00.000000','%Y/%m/%d %H:%i:%s.%f') WHERE NAME='B_ANS_TWR_JOBTP_PROPERTY_RIC';
UPDATE A_SEQUENCE SET MENU_ID=NULL, DISP_SEQ=2100290016, NOTE='for the history table.', LAST_UPDATE_TIMESTAMP=STR_TO_DATE('2015/04/01 10:00:00.000000','%Y/%m/%d %H:%i:%s.%f') WHERE NAME='B_ANS_TWR_JOBTP_PROPERTY_JSQ';
UPDATE A_SEQUENCE SET MENU_ID=NULL, DISP_SEQ=2100290017, NOTE=NULL, LAST_UPDATE_TIMESTAMP=STR_TO_DATE('2015/04/01 10:00:00.000000','%Y/%m/%d %H:%i:%s.%f') WHERE NAME='B_ANS_COMVRAS_USLIST_V_ID_RIC';
UPDATE A_SEQUENCE SET MENU_ID=NULL, DISP_SEQ=2100290018, NOTE='for the history table.', LAST_UPDATE_TIMESTAMP=STR_TO_DATE('2015/04/01 10:00:00.000000','%Y/%m/%d %H:%i:%s.%f') WHERE NAME='B_ANS_COMVRAS_USLIST_V_ID_JSQ';
UPDATE A_SEQUENCE SET MENU_ID=NULL, DISP_SEQ=2100290019, NOTE=NULL, LAST_UPDATE_TIMESTAMP=STR_TO_DATE('2015/04/01 10:00:00.000000','%Y/%m/%d %H:%i:%s.%f') WHERE NAME='B_ANS_COMVRAS_USLIST_F_ID_RIC';
UPDATE A_SEQUENCE SET MENU_ID=NULL, DISP_SEQ=2100290020, NOTE='for the history table.', LAST_UPDATE_TIMESTAMP=STR_TO_DATE('2015/04/01 10:00:00.000000','%Y/%m/%d %H:%i:%s.%f') WHERE NAME='B_ANS_COMVRAS_USLIST_F_ID_JSQ';
UPDATE A_SEQUENCE SET MENU_ID=NULL, DISP_SEQ=2100290021, NOTE=NULL, LAST_UPDATE_TIMESTAMP=STR_TO_DATE('2015/04/01 10:00:00.000000','%Y/%m/%d %H:%i:%s.%f') WHERE NAME='B_ANS_TWR_VIRTUALENV_RIC';
UPDATE A_SEQUENCE SET MENU_ID=NULL, DISP_SEQ=2100290022, NOTE='for the history table.', LAST_UPDATE_TIMESTAMP=STR_TO_DATE('2015/04/01 10:00:00.000000','%Y/%m/%d %H:%i:%s.%f') WHERE NAME='B_ANS_TWR_VIRTUALENV_JSQ';
UPDATE A_SEQUENCE SET MENU_ID=NULL, DISP_SEQ=2100290023, NOTE=NULL, LAST_UPDATE_TIMESTAMP=STR_TO_DATE('2015/04/01 10:00:00.000000','%Y/%m/%d %H:%i:%s.%f') WHERE NAME='B_ANS_TWR_ORGANIZATION_RIC';
UPDATE A_SEQUENCE SET MENU_ID=NULL, DISP_SEQ=2100290024, NOTE='for the history table.', LAST_UPDATE_TIMESTAMP=STR_TO_DATE('2015/04/01 10:00:00.000000','%Y/%m/%d %H:%i:%s.%f') WHERE NAME='B_ANS_TWR_ORGANIZATION_JSQ';
UPDATE A_SEQUENCE SET MENU_ID=NULL, DISP_SEQ=2100290025, NOTE=NULL, LAST_UPDATE_TIMESTAMP=STR_TO_DATE('2015/04/01 10:00:00.000000','%Y/%m/%d %H:%i:%s.%f') WHERE NAME='B_ANS_TWR_CREDENTIAL_TYPE_RIC';
UPDATE A_SEQUENCE SET MENU_ID=NULL, DISP_SEQ=2100290026, NOTE='for the history table.', LAST_UPDATE_TIMESTAMP=STR_TO_DATE('2015/04/01 10:00:00.000000','%Y/%m/%d %H:%i:%s.%f') WHERE NAME='B_ANS_TWR_CREDENTIAL_TYPE_JSQ';
